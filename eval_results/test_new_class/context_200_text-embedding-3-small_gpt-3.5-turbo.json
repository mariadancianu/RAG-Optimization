{
    "56ddde6b9a695914005b9628": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: . The area corresponded to the northern part of present-day Upper Normandy down to the river Seine, but the Duchy would eventually extend west beyond the Seine\n\nSource 3: . The Duchy of Normandy, which they formed by treaty with the French crown, was a great fief of medieval France, and under Richard I of Normandy was forged into a cohesive and formidable principality",
    "56ddde6b9a695914005b9629": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: The Normans were in contact with England from an early date\n\nSource 3: . Most Norman knights remained poor and land-hungry, and by 1066 Normandy had been exporting fighting horsemen for more than a generation",
    "56ddde6b9a695914005b962a": "Source 1: the Danish Vikings\n\nSource 2: . It was introduced in Norway in 1349 when a ship landed at Ask\u00f8y, then spread to Bj\u00f8rgvin (modern Bergen) and Iceland. Finally it spread to northwestern Russia in 1351\n\nSource 3: . They were descended from Norse (\"Norman\" comes from \"Norseman\") raiders and pirates from Denmark, Iceland and Norway who, under their leader Rollo, agreed to swear fealty to King Charles III of West",
    "56ddde6b9a695914005b962b": "Source 1: . They were descended from Norse (\"Norman\" comes from \"Norseman\") raiders and pirates from Denmark, Iceland and Norway who, under their leader Rollo, agreed to swear fealty to King Charles III of West\n\nSource 2: the Danish Vikings\n\nSource 3: from the English Danelaw under Norse control",
    "56ddde6b9a695914005b962c": "Source 1: . The distinct cultural and ethnic identity of the Normans emerged initially in the first half of the 10th century, and it continued to evolve over the succeeding centuries.\n\nSource 2: The Normans were in contact with England from an early date\n\nSource 3: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France",
    "56dddf4066d3e219004dad5f": "Source 1: In 1066, Duke William II of Normandy conquered England killing King Harold II at the Battle of Hastings\n\nSource 2: led to the Norman conquest of England at the Battle of Hastings in 1066\n\nSource 3: . Early Norman kings of England, as Dukes of Normandy, owed homage to the King of France for their land on the continent",
    "56dddf4066d3e219004dad60": "Source 1: . Early Norman kings of England, as Dukes of Normandy, owed homage to the King of France for their land on the continent\n\nSource 2: . The Duchy of Normandy, which they formed by treaty with the French crown, was a great fief of medieval France, and under Richard I of Normandy was forged into a cohesive and formidable principality\n\nSource 3: . The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was",
    "56dddf4066d3e219004dad61": "Source 1: . The Normans were famed for their martial spirit and eventually for their Christian piety, becoming exponents of the Catholic orthodoxy into which they assimilated\n\nSource 2: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 3: The legendary religious zeal of the Normans was exercised in religious wars long before the First Crusade carved out a Norman principality in Antioch",
    "56dde0379a695914005b9636": "Source 1: The English name \"Normans\" comes from the French words Normans/Normanz, plural of Normant, modern French normand, which is itself borrowed from Old Low Franconian Nortmann \"Northman\" or directly from\n\nSource 2: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 3: . The Norman language was forged by the adoption of the indigenous langue d'o\u00efl branch of Romance by a Norse-speaking ruling class, and it developed into the regional language that survives today.",
    "56dde0379a695914005b9637": "Source 1: The English name \"Normans\" comes from the French words Normans/Normanz, plural of Normant, modern French normand, which is itself borrowed from Old Low Franconian Nortmann \"Northman\" or directly from\n\nSource 2: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 3: . The Norman language was forged by the adoption of the indigenous langue d'o\u00efl branch of Romance by a Norse-speaking ruling class, and it developed into the regional language that survives today.",
    "56dde0ba66d3e219004dad75": "Source 1: . The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was\n\nSource 2: . The Duchy of Normandy, which they formed by treaty with the French crown, was a great fief of medieval France, and under Richard I of Normandy was forged into a cohesive and formidable principality\n\nSource 3: . Early Norman kings of England, as Dukes of Normandy, owed homage to the King of France for their land on the continent",
    "56dde0ba66d3e219004dad76": "Source 1: . The treaty offered Rollo and his men the French lands between the river Epte and the Atlantic coast in exchange for their protection against further Viking incursions\n\nSource 2: . The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was\n\nSource 3: . Rollo's contingents who raided and ultimately settled Normandy and parts of the Atlantic coast included Danes, Norwegians, Norse\u2013Gaels, Orkney Vikings, possibly Swedes, and Anglo-Danes from the",
    "56dde0ba66d3e219004dad77": "Source 1: . The area corresponded to the northern part of present-day Upper Normandy down to the river Seine, but the Duchy would eventually extend west beyond the Seine\n\nSource 2: . The church was utilised by the dukes as a unifying force for their disparate duchy\n\nSource 3: . By the time of the Miocene, a river system had developed in the Upper Rhine Graben, that continued northward and is considered the first Rhine river",
    "56dde1d966d3e219004dad8d": "Source 1: the Danish Vikings\n\nSource 2: . They were descended from Norse (\"Norman\" comes from \"Norseman\") raiders and pirates from Denmark, Iceland and Norway who, under their leader Rollo, agreed to swear fealty to King Charles III of West\n\nSource 3: . Earlier Viking settlers had begun arriving in the 880s, but were divided between colonies in the east (Roumois and Pays de Caux) around the low Seine valley and in the west in the Cotentin",
    "56dde27d9a695914005b9651": "Source 1: . The Normans were famed for their martial spirit and eventually for their Christian piety, becoming exponents of the Catholic orthodoxy into which they assimilated\n\nSource 2: first Norman settlements were established\n\nSource 3: The legendary religious zeal of the Normans was exercised in religious wars long before the First Crusade carved out a Norman principality in Antioch",
    "56dde27d9a695914005b9652": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: . The area corresponded to the northern part of present-day Upper Normandy down to the river Seine, but the Duchy would eventually extend west beyond the Seine\n\nSource 3: The Normans thereafter adopted the growing feudal doctrines of the rest of France, and worked them into a functional hierarchical system in both Normandy and in England",
    "56dde2fa66d3e219004dad9b": "Source 1: . Most Norman knights remained poor and land-hungry, and by 1066 Normandy had been exporting fighting horsemen for more than a generation\n\nSource 2: . The Normans are noted both for their culture, such as their unique Romanesque architecture and musical traditions, and for their significant military accomplishments and innovations\n\nSource 3: first Norman settlements were established",
    "56de0f6a4396321400ee257f": "Source 1: Soon after the Normans began to enter Italy, they entered the Byzantine Empire and then Armenia, fighting against the Pechenegs, the Bulgars, and especially the Seljuk Turks\n\nSource 2: . Dissension among the high ranks coerced the Normans to retreat to Italy. They lost Dyrrachium, Valona, and Butrint in 1085, after the death of Robert.\n\nSource 3: . Norman mercenaries were first encouraged to come to the south by the Lombards to act against the Byzantines, but they soon fought in Byzantine service in Sicily",
    "56de0ffd4396321400ee258d": "Source 1: One of the first Norman mercenaries to serve as a Byzantine general was Herv\u00e9 in the 1050s. By then however, there were already Norman mercenaries serving as far away as Trebizond and Georgia\n\nSource 2: . Forced to retreat, Alexius ceded the command to a high Albanian official named Comiscortes in the service of Byzantium\n\nSource 3: Several families of Byzantine Greece were of Norman mercenary origin during the period of the Comnenian Restoration, when Byzantine emperors were seeking out western European warriors",
    "56de0ffd4396321400ee258e": "Source 1: . They were based at Malatya and Edessa, under the Byzantine duke of Antioch, Isaac Komnenos. In the 1060s, Robert Crispin led the Normans of Edessa against the Turks\n\nSource 2: The conquest of Cyprus by the Anglo-Norman forces of the Third Crusade opened a new chapter in the history of the island, which would be under Western European domination for the following 380 years\n\nSource 3: . Tancred was instrumental in the conquest of Jerusalem and he worked for the expansion of the Crusader kingdom in Transjordan and the region of Galilee.[citation needed]",
    "56de0ffd4396321400ee258f": "Source 1: . Roussel de Bailleul even tried to carve out an independent state in Asia Minor with support from the local population, but he was stopped by the Byzantine general Alexius Komnenos.\n\nSource 2: Governor Vaudreuil, who harboured ambitions to become the French commander in chief (in addition to his role as governor), acted during the winter of 1756 before those reinforcements arrived\n\nSource 3: . French leaders, such as Louis XIV and Napoleon Bonaparte, tried with varying degrees of success to annex lands west of the Rhine",
    "56de10b44396321400ee2593": "Source 1: first Norman settlements were established\n\nSource 2: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 3: . The Norman language was forged by the adoption of the indigenous langue d'o\u00efl branch of Romance by a Norse-speaking ruling class, and it developed into the regional language that survives today.",
    "56de10b44396321400ee2594": "Source 1: . Later, many took up service with the Armenian state further south in Cilicia and the Taurus Mountains. A Norman named Oursel led a force of \"Franks\" into the upper Euphrates valley in northern Syria\n\nSource 2: By the 6th century, the Rhine was within the borders of Francia\n\nSource 3: . From 1073 to 1074, 8,000 of the 20,000 troops of the Armenian general Philaretus Brachamius were Normans\u2014formerly of Oursel\u2014led by Raimbaud",
    "56de10b44396321400ee2595": "Source 1: Some Normans joined Turkish forces to aid in the destruction of the Armenians vassal-states of Sassoun and Taron in far eastern Anatolia\n\nSource 2: . They were based at Malatya and Edessa, under the Byzantine duke of Antioch, Isaac Komnenos. In the 1060s, Robert Crispin led the Normans of Edessa against the Turks\n\nSource 3: Soon after the Normans began to enter Italy, they entered the Byzantine Empire and then Armenia, fighting against the Pechenegs, the Bulgars, and especially the Seljuk Turks",
    "56de11154396321400ee25aa": "Source 1: . The Raoulii were descended from an Italo-Norman named Raoul, the Petraliphae were descended from a Pierre d'Aulps, and that group of Albanian clans known as the Maniakates were descended from",
    "56de148dcffd8e1900b4b5bc": "Source 1: Robert Guiscard, an other Norman adventurer previously elevated to the dignity of count of Apulia as the result of his military successes, ultimately drove the Byzantines out of southern Italy\n\nSource 2: in southern Italy amongst their Norman cousins\n\nSource 3: . Lombard Salerno was a centre of ivorywork in the 11th century and this continued under Norman domination",
    "56de148dcffd8e1900b4b5bd": "Source 1: . The city's garrison resisted until February 1082, when Dyrrachium was betrayed to the Normans by the Venetian and Amalfitan merchants who had settled there\n\nSource 2: . Dissension among the high ranks coerced the Normans to retreat to Italy. They lost Dyrrachium, Valona, and Butrint in 1085, after the death of Robert.\n\nSource 3: The further decline of Byzantine state-of-affairs paved the road to a third attack in 1185, when a large Norman army invaded Dyrrachium, owing to the betrayal of high Byzantine officials",
    "56de148dcffd8e1900b4b5be": "Source 1: . It consisted of 402 people (5 Government officials, 9 officers of marines, 2 drummers, and 39 privates, 5 soldiers' wives, and a child, 307 convicts, 17 convicts' wives, and 7 children)\n\nSource 2: . Having obtained the consent of pope Gregory VII and acting as his vassal, Robert continued his campaign conquering the Balkan peninsula as a foothold for western feudal lords and the Catholic Church",
    "56de15104396321400ee25b7": "Source 1: Soon after the Normans began to enter Italy, they entered the Byzantine Empire and then Armenia, fighting against the Pechenegs, the Bulgars, and especially the Seljuk Turks\n\nSource 2: . Dissension among the high ranks coerced the Normans to retreat to Italy. They lost Dyrrachium, Valona, and Butrint in 1085, after the death of Robert.\n\nSource 3: . The lack of supplies, disease and Byzantine resistance forced Bohemond to retreat from his campaign and sign a peace treaty with the Byzantines in the city of Deabolis.",
    "56de15104396321400ee25b8": "",
    "56de15104396321400ee25b9": "Source 1: . Meanwhile, they occupied Petrela, the citadel of Mili at the banks of the river Deabolis, Gllavenica (Ballsh), Kanina and Jericho",
    "56de1563cffd8e1900b4b5c2": "Source 1: . The city's garrison resisted until February 1082, when Dyrrachium was betrayed to the Normans by the Venetian and Amalfitan merchants who had settled there\n\nSource 2: The further decline of Byzantine state-of-affairs paved the road to a third attack in 1185, when a large Norman army invaded Dyrrachium, owing to the betrayal of high Byzantine officials\n\nSource 3: . Dissension among the high ranks coerced the Normans to retreat to Italy. They lost Dyrrachium, Valona, and Butrint in 1085, after the death of Robert.",
    "56de1563cffd8e1900b4b5c3": "Source 1: . The two US Navy bases, Blount Island Command and the nearby Naval Submarine Base Kings Bay form the third largest military presence in the United States\n\nSource 2: . Its riverine location facilitates two United States Navy bases and the Port of Jacksonville, Florida's third largest seaport\n\nSource 3: Harbor improvements since the late 19th century have made Jacksonville a major military and civilian deep-water port",
    "56de1563cffd8e1900b4b5c4": "Source 1: . Some time later, Dyrrachium\u2014one of the most important naval bases of the Adriatic\u2014fell again to Byzantine hands.\n\nSource 2: . The city's garrison resisted until February 1082, when Dyrrachium was betrayed to the Normans by the Venetian and Amalfitan merchants who had settled there\n\nSource 3: . They joined the fleet that had previously conquered Corfu and attacked Dyrrachium from land and sea, devastating everything along the way",
    "56de15dbcffd8e1900b4b5c8": "",
    "56de15dbcffd8e1900b4b5c9": "Source 1: . This relationship eventually produced closer ties of blood through the marriage of Emma, sister of Duke Richard II of Normandy, and King Ethelred II of England\n\nSource 2: . His stay in Normandy (until 1016) influenced him and his sons by Emma, who stayed in Normandy after Cnut the Great's conquest of the isle.",
    "56de15dbcffd8e1900b4b5ca": "Source 1: . Because of this, Ethelred fled to Normandy in 1013, when he was forced from his kingdom by Sweyn Forkbeard\n\nSource 2: in the exile of Earl Godwin of Wessex\n\nSource 3: One of the claimants of the English throne opposing William the Conqueror, Edgar Atheling, eventually fled to Scotland",
    "56de15dbcffd8e1900b4b5cb": "Source 1: . Because of this, Ethelred fled to Normandy in 1013, when he was forced from his kingdom by Sweyn Forkbeard\n\nSource 2: in the exile of Earl Godwin of Wessex\n\nSource 3: . This relationship eventually produced closer ties of blood through the marriage of Emma, sister of Duke Richard II of Normandy, and King Ethelred II of England",
    "56de1645cffd8e1900b4b5d0": "Source 1: When finally Edward the Confessor returned from his father's refuge in 1041, at the invitation of his half-brother Harthacnut, he brought with him a Norman-educated mind\n\nSource 2: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 3: One of the claimants of the English throne opposing William the Conqueror, Edgar Atheling, eventually fled to Scotland",
    "56de1645cffd8e1900b4b5d1": "Source 1: When finally Edward the Confessor returned from his father's refuge in 1041, at the invitation of his half-brother Harthacnut, he brought with him a Norman-educated mind\n\nSource 2: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 3: . He also brought many Norman counsellors and fighters, some of whom established an English cavalry force. This concept never really took root, but it is a typical example of the attitudes of Edward",
    "56de1645cffd8e1900b4b5d2": "Source 1: . He appointed Robert of Jumi\u00e8ges archbishop of Canterbury and made Ralph the Timid earl of Hereford\n\nSource 2: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 3: When finally Edward the Confessor returned from his father's refuge in 1041, at the invitation of his half-brother Harthacnut, he brought with him a Norman-educated mind",
    "56de16ca4396321400ee25c5": "Source 1: In 1066, Duke William II of Normandy conquered England killing King Harold II at the Battle of Hastings\n\nSource 2: . Because of this, Ethelred fled to Normandy in 1013, when he was forced from his kingdom by Sweyn Forkbeard\n\nSource 3: led to the Norman conquest of England at the Battle of Hastings in 1066",
    "56de16ca4396321400ee25c6": "Source 1: In 1066, Duke William II of Normandy conquered England killing King Harold II at the Battle of Hastings\n\nSource 2: When finally Edward the Confessor returned from his father's refuge in 1041, at the invitation of his half-brother Harthacnut, he brought with him a Norman-educated mind\n\nSource 3: . Because of this, Ethelred fled to Normandy in 1013, when he was forced from his kingdom by Sweyn Forkbeard",
    "56de16ca4396321400ee25c7": "Source 1: led to the Norman conquest of England at the Battle of Hastings in 1066\n\nSource 2: In 1066, Duke William II of Normandy conquered England killing King Harold II at the Battle of Hastings\n\nSource 3: . It was commissioned by Odo, the Bishop of Bayeux and first Earl of Kent, employing natives from Kent who were learned in the Nordic traditions imported in the previous half century by the Danish",
    "56de16ca4396321400ee25c8": "Source 1: . The invading Normans and their descendants replaced the Anglo-Saxons as the ruling class of England\n\nSource 2: . The new Norman rulers were culturally and ethnically distinct from the old French aristocracy, most of whom traced their lineage to Franks of the Carolingian dynasty\n\nSource 3: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France",
    "56de1728cffd8e1900b4b5d7": "Source 1: . The Anglo-Norman language became distinct from the Latin language, something that was the subject of some humour by Geoffrey Chaucer\n\nSource 2: . The Norman language was forged by the adoption of the indigenous langue d'o\u00efl branch of Romance by a Norse-speaking ruling class, and it developed into the regional language that survives today.\n\nSource 3: . The Anglo-Norman language was eventually absorbed into the Anglo-Saxon language of their subjects (see Old English) and influenced it, helping (along with the Norse language of the earlier",
    "56de179dcffd8e1900b4b5da": "Source 1: The Normans had a profound effect on Irish culture and history after their invasion at Bannow Bay in 1169. Initially the Normans maintained a distinct culture and ethnicity\n\nSource 2: led to the Norman conquest of England at the Battle of Hastings in 1066\n\nSource 3: first Norman settlements were established",
    "56de179dcffd8e1900b4b5db": "Source 1: The Normans had a profound effect on Irish culture and history after their invasion at Bannow Bay in 1169. Initially the Normans maintained a distinct culture and ethnicity\n\nSource 2: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 3: The Normans were in contact with England from an early date",
    "56de179dcffd8e1900b4b5dc": "Source 1: The Normans had a profound effect on Irish culture and history after their invasion at Bannow Bay in 1169. Initially the Normans maintained a distinct culture and ethnicity\n\nSource 2: people, blending their maternal Frankish heritage with Old Norse traditions and customs to synthesize a unique \"Norman\" culture in the north of France\n\nSource 3: .\" The Normans settled mostly in an area in the east of Ireland, later known as the Pale, and also built many fine castles and settlements, including Trim Castle and Dublin Castle",
    "56de17f9cffd8e1900b4b5e0": "Source 1: . King Malcolm III of Scotland married Edgar's sister Margaret, and came into opposition to William who had already disputed Scotland's southern borders",
    "56de17f9cffd8e1900b4b5e1": "Source 1: . King Malcolm III of Scotland married Edgar's sister Margaret, and came into opposition to William who had already disputed Scotland's southern borders",
    "56de17f9cffd8e1900b4b5e2": "Source 1: . William invaded Scotland in 1072, riding as far as Abernethy where he met up with his fleet of ships\n\nSource 2: . King Malcolm III of Scotland married Edgar's sister Margaret, and came into opposition to William who had already disputed Scotland's southern borders\n\nSource 3: In 1066, Duke William II of Normandy conquered England killing King Harold II at the Battle of Hastings",
    "56de17f9cffd8e1900b4b5e3": "Source 1: . He ordered Isaac to release the prisoners and the treasure. Isaac refused, so Richard landed his troops and took Limassol.",
    "56de3cd0cffd8e1900b4b6be": "",
    "56de3cd0cffd8e1900b4b6bf": "Source 1: scholars call the \"Davidian Revolution\"\n\nSource 2: . King David I of Scotland, whose elder brother Alexander I had married Sybilla of Normandy, was instrumental in introducing Normans and Norman culture to Scotland, part of the process some scholars\n\nSource 3: Normans came into Scotland, building castles and founding noble families who would provide some future kings, such as Robert the Bruce, as well as founding a considerable number of the Scottish clans",
    "56de3d594396321400ee26ca": "Source 1: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 2: . He appointed Robert of Jumi\u00e8ges archbishop of Canterbury and made Ralph the Timid earl of Hereford\n\nSource 3: in the exile of Earl Godwin of Wessex",
    "56de3d594396321400ee26cb": "Source 1: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 2: . He appointed Robert of Jumi\u00e8ges archbishop of Canterbury and made Ralph the Timid earl of Hereford\n\nSource 3: success in the war that was unfolding",
    "56de3d594396321400ee26cc": "Source 1: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 2: . He appointed Robert of Jumi\u00e8ges archbishop of Canterbury and made Ralph the Timid earl of Hereford",
    "56de3dbacffd8e1900b4b6d2": "Source 1: . Early Norman kings of England, as Dukes of Normandy, owed homage to the King of France for their land on the continent\n\nSource 2: The Normans thereafter adopted the growing feudal doctrines of the rest of France, and worked them into a functional hierarchical system in both Normandy and in England\n\nSource 3: . The invading Normans and their descendants replaced the Anglo-Saxons as the ruling class of England",
    "56de3e414396321400ee26d8": "Source 1: . They were major foreign participants in the Reconquista in Iberia. In 1018, Roger de Tosny travelled to the Iberian Peninsula to carve out a state for himself from Moorish lands, but failed\n\nSource 2: . In these original ventures, the Normans failed to make any headway into Wales.\n\nSource 3: . Norman adventurers founded the Kingdom of Sicily under Roger II after conquering southern Italy on the Saracens and Byzantines, and an expedition on behalf of their duke, William the Conqueror, led",
    "56de3e414396321400ee26d9": "Source 1: . In 1064, during the War of Barbastro, William of Montreuil led the papal army and took a huge booty.\n\nSource 2: de Bourlamaque, all experienced veterans from the War of the Austrian Succession\n\nSource 3: . Their troops were gathered in Normandy, Gascony and were later reinforced by Castilian colonists.",
    "56de3ebc4396321400ee26e6": "Source 1: . After the successful Siege of Antioch in 1097, Bohemond began carving out an independent principality around that city\n\nSource 2: . In 1348\u201349, the disease reached Antioch. The city's residents fled to the north, most of them dying during the journey, but the infection had been spread to the people of Asia Minor\n\nSource 3: . Norman cultural and military influence spread from these new European centres to the Crusader states of the Near East, where their prince Bohemond I founded the Principality of Antioch in the",
    "56de3ebc4396321400ee26e7": "Source 1: . Bohemond was the de facto leader of the Crusade during its passage through Asia Minor\n\nSource 2: . After the successful Siege of Antioch in 1097, Bohemond began carving out an independent principality around that city\n\nSource 3: de Bohun line of French royalty descended from Charlemagne, Jean Postell of Dieppe France, Alexander Pepin, Antoine Poitevin of Orsement France, and Jacques de Bordeaux of Grenoble, immigrated to the",
    "56de3ebc4396321400ee26e8": "Source 1: . Tancred was instrumental in the conquest of Jerusalem and he worked for the expansion of the Crusader kingdom in Transjordan and the region of Galilee.[citation needed]\n\nSource 2: In 1096, Crusaders passing by the siege of Amalfi were joined by Bohemond of Taranto and his nephew Tancred with an army of Italo-Normans\n\nSource 3: . In 1064, during the War of Barbastro, William of Montreuil led the papal army and took a huge booty.",
    "56de3efccffd8e1900b4b6fe": "Source 1: The conquest of Cyprus by the Anglo-Norman forces of the Third Crusade opened a new chapter in the history of the island, which would be under Western European domination for the following 380 years\n\nSource 2: . Survivors of the wrecks had been taken prisoner by the island's despot Isaac Komnenos. On 1 May 1191, Richard's fleet arrived in the port of Limassol on Cyprus\n\nSource 3: . Before his departure, he named two of his Norman generals, Richard de Camville and Robert de Thornham, as governors of Cyprus.",
    "56de3f784396321400ee26fa": "Source 1: . His exploit was well publicized and contributed to his reputation; he also derived significant financial gains from the conquest of the island. Richard left for Acre on 5 June, with his allies\n\nSource 2: In April 1191 Richard the Lion-hearted left Messina with a large fleet in order to reach Acre. But a storm dispersed the fleet\n\nSource 3: . The local barons abandoned Isaac, who considered making peace with Richard, joining him on the crusade, and offering his daughter in marriage to the person named by Richard",
    "56de3f784396321400ee26fb": "Source 1: . The local barons abandoned Isaac, who considered making peace with Richard, joining him on the crusade, and offering his daughter in marriage to the person named by Richard\n\nSource 2: . All declared their support for Richard provided that he support Guy against his rival Conrad of Montferrat\n\nSource 3: British researchers Richard G",
    "56de3f784396321400ee26fc": "Source 1: In April 1191 Richard the Lion-hearted left Messina with a large fleet in order to reach Acre. But a storm dispersed the fleet\n\nSource 2: . Survivors of the wrecks had been taken prisoner by the island's despot Isaac Komnenos. On 1 May 1191, Richard's fleet arrived in the port of Limassol on Cyprus\n\nSource 3: . His exploit was well publicized and contributed to his reputation; he also derived significant financial gains from the conquest of the island. Richard left for Acre on 5 June, with his allies",
    "56de3f784396321400ee26fd": "Source 1: The conquest of Cyprus by the Anglo-Norman forces of the Third Crusade opened a new chapter in the history of the island, which would be under Western European domination for the following 380 years\n\nSource 2: . Survivors of the wrecks had been taken prisoner by the island's despot Isaac Komnenos. On 1 May 1191, Richard's fleet arrived in the port of Limassol on Cyprus\n\nSource 3: . Before his departure, he named two of his Norman generals, Richard de Camville and Robert de Thornham, as governors of Cyprus.",
    "56de40da4396321400ee2708": "Source 1: . All declared their support for Richard provided that he support Guy against his rival Conrad of Montferrat",
    "56de40da4396321400ee2709": "Source 1: . Isaac surrendered and was confined with silver chains, because Richard had promised that he would not place him in irons. By 1 June, Richard had conquered the whole island\n\nSource 2: . The local barons abandoned Isaac, who considered making peace with Richard, joining him on the crusade, and offering his daughter in marriage to the person named by Richard\n\nSource 3: . He ordered Isaac to release the prisoners and the treasure. Isaac refused, so Richard landed his troops and took Limassol.",
    "56de40da4396321400ee270a": "Source 1: . Survivors of the wrecks had been taken prisoner by the island's despot Isaac Komnenos. On 1 May 1191, Richard's fleet arrived in the port of Limassol on Cyprus\n\nSource 2: . Before his departure, he named two of his Norman generals, Richard de Camville and Robert de Thornham, as governors of Cyprus.\n\nSource 3: . He ordered Isaac to release the prisoners and the treasure. Isaac refused, so Richard landed his troops and took Limassol.",
    "56de49564396321400ee277a": "Source 1: Between 1402 and 1405, the expedition led by the Norman noble Jean de Bethencourt and the Poitevine Gadifer de la Salle conquered the Canarian islands of Lanzarote, Fuerteventura and El Hierro off the\n\nSource 2: in the Levant, to Scotland and Wales in Great Britain, to Ireland, and to the coasts of north Africa and the Canary Islands\n\nSource 3: Bethencourt took the title of King of the Canary Islands, as vassal to Henry III of Castile",
    "56de49a8cffd8e1900b4b7a7": "Source 1: Bethencourt took the title of King of the Canary Islands, as vassal to Henry III of Castile\n\nSource 2: Between 1402 and 1405, the expedition led by the Norman noble Jean de Bethencourt and the Poitevine Gadifer de la Salle conquered the Canarian islands of Lanzarote, Fuerteventura and El Hierro off the\n\nSource 3: . In 1418, Jean's nephew Maciot de Bethencourt sold the rights to the islands to Enrique P\u00e9rez de Guzm\u00e1n, 2nd Count de Niebla.",
    "56de49a8cffd8e1900b4b7a8": "Source 1: . ITV were the current rights holders, and fought hard to retain the new rights. ITV had increased its offer from \u00a318m to \u00a334m per year to keep control of the rights\n\nSource 2: for rights\n\nSource 3: original owners",
    "56de49a8cffd8e1900b4b7a9": "Source 1: . ITV were the current rights holders, and fought hard to retain the new rights. ITV had increased its offer from \u00a318m to \u00a334m per year to keep control of the rights\n\nSource 2: for rights\n\nSource 3: original owners",
    "56de4a474396321400ee2786": "",
    "56de4a474396321400ee2787": "Source 1: . Norman customary law was transcribed in two customaries in Latin by two judges for use by them and their colleagues: These are the Tr\u00e8s ancien coutumier (Very ancient customary), authored between\n\nSource 2: The customary law of Normandy was developed between the 10th and 13th centuries and survives today through the legal systems of Jersey and Guernsey in the Channel Islands\n\nSource 3: between 1200 and 1245; and the Grand coutumier de Normandie (Great customary of Normandy, originally Summa de legibus Normanniae in curia la\u00efcali), authored between 1235 and 1245",
    "56de4a89cffd8e1900b4b7bd": "Source 1: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued\n\nSource 2: In England, the period of Norman architecture immediately succeeds that of the Anglo-Saxon and precedes the Early Gothic\n\nSource 3: this Norman creativity",
    "56de4a89cffd8e1900b4b7be": "Source 1: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued\n\nSource 2: In England, the period of Norman architecture immediately succeeds that of the Anglo-Saxon and precedes the Early Gothic\n\nSource 3: . The Normans are noted both for their culture, such as their unique Romanesque architecture and musical traditions, and for their significant military accomplishments and innovations",
    "56de4b074396321400ee2793": "Source 1: In England, the period of Norman architecture immediately succeeds that of the Anglo-Saxon and precedes the Early Gothic\n\nSource 2: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued\n\nSource 3: The Normans thereafter adopted the growing feudal doctrines of the rest of France, and worked them into a functional hierarchical system in both Normandy and in England",
    "56de4b074396321400ee2794": "Source 1: In England, the period of Norman architecture immediately succeeds that of the Anglo-Saxon and precedes the Early Gothic\n\nSource 2: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued\n\nSource 3: The Normans thereafter adopted the growing feudal doctrines of the rest of France, and worked them into a functional hierarchical system in both Normandy and in England",
    "56de4b074396321400ee2795": "Source 1: . In southern Italy, the Normans incorporated elements of Islamic, Lombard, and Byzantine building techniques into their own, initiating a unique style known as Norman-Arab architecture within the\n\nSource 2: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued\n\nSource 3: In England, the period of Norman architecture immediately succeeds that of the Anglo-Saxon and precedes the Early Gothic",
    "56de4b5c4396321400ee2799": "Source 1: Other predecessors of the Reformed church included the pro-reform and Gallican Roman Catholics, such as Jacques Lefevre (c. 1455\u20131536)\n\nSource 2: . The country had a long history of struggles with the papacy by the time the Protestant Reformation finally arrived\n\nSource 3: . However, in the early 11th century the dukes began a programme of church reform, encouraging the Cluniac reform of monasteries and patronising intellectual pursuits, especially the proliferation of",
    "56de4b5c4396321400ee279a": "Source 1: . The church was utilised by the dukes as a unifying force for their disparate duchy\n\nSource 2: Church (1777\u20131782)\n\nSource 3: Most of the Huguenot congregations (or individuals) in North America eventually affiliated with other Protestant denominations with more numerous members",
    "56de4bb84396321400ee27a2": "Source 1: . A series of religious conflicts followed, known as the Wars of Religion, fought intermittently from 1562 to 1598\n\nSource 2: The French Wars of Religion in the 16th century and French Revolution in the 18th successively destroyed much of what existed in the way of the architectural and artistic remnant of this Norman\n\nSource 3: Renewed religious warfare in the 1620s caused the political and military privileges of the Huguenots to be abolished following their defeat",
    "56de4c324396321400ee27ab": "Source 1: By far the most famous work of Norman art is the Bayeux Tapestry, which is not a tapestry but a work of embroidery\n\nSource 2: . It was commissioned by Odo, the Bishop of Bayeux and first Earl of Kent, employing natives from Kent who were learned in the Nordic traditions imported in the previous half century by the Danish\n\nSource 3: . Although 19th century sources have asserted that some of these refugees were lacemakers and contributed to the East Midlands lace industry, this is contentious",
    "56de4c324396321400ee27ac": "Source 1: this Norman creativity\n\nSource 2: By far the most famous work of Norman art is the Bayeux Tapestry, which is not a tapestry but a work of embroidery\n\nSource 3: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued",
    "56de4c324396321400ee27ad": "Source 1: By far the most famous work of Norman art is the Bayeux Tapestry, which is not a tapestry but a work of embroidery\n\nSource 2: . It was commissioned by Odo, the Bishop of Bayeux and first Earl of Kent, employing natives from Kent who were learned in the Nordic traditions imported in the previous half century by the Danish",
    "56de51244396321400ee27ef": "Source 1: In Britain, Norman art primarily survives as stonework or metalwork, such as capitals and baptismal fonts\n\nSource 2: . Many churches preserve sculptured fonts, capitals, and more importantly mosaics, which were common in Norman Italy and drew heavily on the Greek heritage\n\nSource 3: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued",
    "56de51c64396321400ee27f7": "Source 1: Normandy was the site of several important developments in the history of classical music in the 11th century. F\u00e9camp Abbey and Saint-Evroul Abbey were centres of musical production and education\n\nSource 2: . The Normans are noted both for their culture, such as their unique Romanesque architecture and musical traditions, and for their significant military accomplishments and innovations\n\nSource 3: . In the final decade of the 11th and first of the 12th century, Normandy experienced a golden age of illustrated manuscripts, but it was brief and the major scriptoria of Normandy ceased to function",
    "56de51c64396321400ee27f8": "Source 1: . Also at F\u00e9camp, the staff, around which neumes were oriented, was first developed and taught in the 11th century\n\nSource 2: Normandy was the site of several important developments in the history of classical music in the 11th century. F\u00e9camp Abbey and Saint-Evroul Abbey were centres of musical production and education\n\nSource 3: . The chief monasteries taking part in this \"renaissance\" of Norman art and scholarship were Mont-Saint-Michel, F\u00e9camp, Jumi\u00e8ges, Bec, Saint-Ouen, Saint-Evroul, and Saint-Wandrille",
    "56de52614396321400ee27fb": "Source 1: After this, Huguenots (with estimates ranging from 200,000 to 1,000,000) fled to surrounding Protestant countries: England, the Netherlands, Switzerland, Norway, Denmark, and Prussia \u2014 whose Calvinist\n\nSource 2: . This led to ongoing alarms along the western frontiers, with streams of refugees returning east to get away from the action.\n\nSource 3: . Under the Norman abbot Robert de Grantmesnil, several monks of Saint-Evroul fled to southern Italy, where they were patronised by Robert Guiscard and established a Latin monastery at Sant'Eufemia",
    "56de52614396321400ee27fc": "Source 1: . Under the Norman abbot Robert de Grantmesnil, several monks of Saint-Evroul fled to southern Italy, where they were patronised by Robert Guiscard and established a Latin monastery at Sant'Eufemia\n\nSource 2: At Saint Evroul, a tradition of singing had developed and the choir achieved fame in Normandy\n\nSource 3: in southern Italy amongst their Norman cousins",
    "56de52614396321400ee27fd": "Source 1: . Under the Norman abbot Robert de Grantmesnil, several monks of Saint-Evroul fled to southern Italy, where they were patronised by Robert Guiscard and established a Latin monastery at Sant'Eufemia\n\nSource 2: . However, in the early 11th century the dukes began a programme of church reform, encouraging the Cluniac reform of monasteries and patronising intellectual pursuits, especially the proliferation of\n\nSource 3: in southern Italy amongst their Norman cousins",
    "56de52614396321400ee27fe": "Source 1: At Saint Evroul, a tradition of singing had developed and the choir achieved fame in Normandy\n\nSource 2: . Under the Norman abbot Robert de Grantmesnil, several monks of Saint-Evroul fled to southern Italy, where they were patronised by Robert Guiscard and established a Latin monastery at Sant'Eufemia\n\nSource 3: . The chief monasteries taking part in this \"renaissance\" of Norman art and scholarship were Mont-Saint-Michel, F\u00e9camp, Jumi\u00e8ges, Bec, Saint-Ouen, Saint-Evroul, and Saint-Wandrille",
    "56e16182e3433e1400422e28": "Source 1: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: Closely related fields in theoretical computer science are analysis of algorithms and computability theory",
    "56e16182e3433e1400422e29": "Source 1: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: . In computational complexity theory, a problem refers to the abstract question to be solved",
    "56e16182e3433e1400422e2a": "Source 1: . A computational problem is understood to be a task that is in principle amenable to being solved by a computer, which is equivalent to stating that the problem may be solved by mechanical\n\nSource 2: be solved algorithmically\n\nSource 3: . It is believed that if a problem can be solved by an algorithm, there exists a Turing machine that solves the problem. Indeed, this is the statement of the Church\u2013Turing thesis",
    "56e16839cd28a01900c67887": "Source 1: To measure the difficulty of solving a computational problem, one may wish to see how much time the best algorithm requires to solve the problem\n\nSource 2: . In computational complexity theory, a problem refers to the abstract question to be solved\n\nSource 3: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used",
    "56e16839cd28a01900c67888": "Source 1: . The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage\n\nSource 2: However, some computational problems are easier to analyze in terms of more unusual resources\n\nSource 3: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used",
    "56e16839cd28a01900c67889": "Source 1: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 2: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 3: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.",
    "56e16839cd28a01900c6788a": "Source 1: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size",
    "56e16839cd28a01900c6788b": "Source 1: . One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: . In computational complexity theory, a problem refers to the abstract question to be solved",
    "56e17644e3433e1400422f40": "Source 1: Closely related fields in theoretical computer science are analysis of algorithms and computability theory\n\nSource 2: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 3: . One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.",
    "56e17644e3433e1400422f41": "Source 1: . A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a\n\nSource 2: Closely related fields in theoretical computer science are analysis of algorithms and computability theory\n\nSource 3: However, some computational problems are easier to analyze in terms of more unusual resources",
    "56e17644e3433e1400422f42": "Source 1: Closely related fields in theoretical computer science are analysis of algorithms and computability theory\n\nSource 2: . A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a\n\nSource 3: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms",
    "56e17644e3433e1400422f43": "Source 1: Closely related fields in theoretical computer science are analysis of algorithms and computability theory\n\nSource 2: to solve a problem, whereas the latter asks a more general question about all possible algorithms that could be used to solve the same problem\n\nSource 3: . It is believed that if a problem can be solved by an algorithm, there exists a Turing machine that solves the problem. Indeed, this is the statement of the Church\u2013Turing thesis",
    "56e17a7ccd28a01900c679a1": "Source 1: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 2: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e\n\nSource 3: . In computational complexity theory, a problem refers to the abstract question to be solved",
    "56e17a7ccd28a01900c679a2": "Source 1: . In computational complexity theory, a problem refers to the abstract question to be solved\n\nSource 2: Decision problems are one of the central objects of study in computational complexity theory\n\nSource 3: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and",
    "56e17a7ccd28a01900c679a3": "Source 1: . In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing\n\nSource 2: . In computational complexity theory, a problem refers to the abstract question to be solved\n\nSource 3: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself",
    "56e17a7ccd28a01900c679a4": "Source 1: . Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.\n\nSource 2: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 3: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance",
    "56e17a7ccd28a01900c679a5": "Source 1: . Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.\n\nSource 2: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 3: . In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing",
    "56e17e6ee3433e1400422f7f": "Source 1: at most 2000 kilometres passing through all of Germany's 15 largest cities? The quantitative answer to this particular problem instance is of little use for solving other instances of the problem,\n\nSource 2: To further highlight the difference between a problem and an instance, consider the following instance of the decision version of the traveling salesman problem: Is there a route of at most 2000\n\nSource 3: the problem, such as asking for a round trip through all sites in Milan whose total length is at most 10 km",
    "56e17e6ee3433e1400422f80": "Source 1: To further highlight the difference between a problem and an instance, consider the following instance of the decision version of the traveling salesman problem: Is there a route of at most 2000\n\nSource 2: . Notable examples include the traveling salesman problem and the integer factorization problem.\n\nSource 3: at most 2000 kilometres passing through all of Germany's 15 largest cities? The quantitative answer to this particular problem instance is of little use for solving other instances of the problem,",
    "56e17e6ee3433e1400422f81": "Source 1: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 2: . One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.\n\nSource 3: . In computational complexity theory, a problem refers to the abstract question to be solved",
    "56e181d9e3433e1400422fa0": "Source 1: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e\n\nSource 2: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 3: .e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded",
    "56e181d9e3433e1400422fa1": "Source 1: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e\n\nSource 2: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 3: . In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing",
    "56e181d9e3433e1400422fa2": "Source 1: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 2: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e\n\nSource 3: . Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.",
    "56e181d9e3433e1400422fa3": "Source 1: .e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded\n\nSource 2: . For example, integers can be represented in binary notation, and graphs can be encoded directly via their adjacency matrices, or by encoding their adjacency lists in binary.\n\nSource 3: . For example, the multiplication of two integers can be expressed as the set of triples (a, b, c) such that the relation a \u00d7 b = c holds",
    "56e181d9e3433e1400422fa4": "Source 1: . For example, integers can be represented in binary notation, and graphs can be encoded directly via their adjacency matrices, or by encoding their adjacency lists in binary.\n\nSource 2: . The formal language associated with this decision problem is then the set of all connected graphs\u2014of course, to obtain a precise definition of this language, one has to decide how graphs are encoded\n\nSource 3: are encoded as binary strings",
    "56e190bce3433e1400422fc8": "Source 1: Decision problems are one of the central objects of study in computational complexity theory\n\nSource 2: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 3: . One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.",
    "56e190bce3433e1400422fc9": "Source 1: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0\n\nSource 2: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no\n\nSource 3: Decision problems are one of the central objects of study in computational complexity theory",
    "56e190bce3433e1400422fca": "Source 1: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0\n\nSource 2: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no\n\nSource 3: Decision problems are one of the central objects of study in computational complexity theory",
    "56e190bce3433e1400422fcb": "Source 1: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no\n\nSource 2: . The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration\n\nSource 3: . The formal language associated with this decision problem is then the set of all connected graphs\u2014of course, to obtain a precise definition of this language, one has to decide how graphs are encoded",
    "56e190bce3433e1400422fcc": "Source 1: . If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.\n\nSource 2: . The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration\n\nSource 3: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e",
    "56e19557e3433e1400422fee": "Source 1: An example of a decision problem is the following. The input is an arbitrary graph. The problem consists in deciding whether the given graph is connected, or not\n\nSource 2: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0\n\nSource 3: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no",
    "56e19557e3433e1400422ff0": "Source 1: . The formal language associated with this decision problem is then the set of all connected graphs\u2014of course, to obtain a precise definition of this language, one has to decide how graphs are encoded\n\nSource 2: An example of a decision problem is the following. The input is an arbitrary graph. The problem consists in deciding whether the given graph is connected, or not\n\nSource 3: Decision problems are one of the central objects of study in computational complexity theory",
    "56e19557e3433e1400422ff1": "Source 1: . The formal language associated with this decision problem is then the set of all connected graphs\u2014of course, to obtain a precise definition of this language, one has to decide how graphs are encoded\n\nSource 2: . The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration\n\nSource 3: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no",
    "56e19724cd28a01900c679f6": "Source 1: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 2: . However, this is not really the case, since function problems can be recast as decision problems\n\nSource 3: . The corresponding set of function problems is FP.",
    "56e19724cd28a01900c679f7": "Source 1: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 2: . The corresponding set of function problems is FP.\n\nSource 3: . Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.",
    "56e19724cd28a01900c679f8": "Source 1: . Notable examples include the traveling salesman problem and the integer factorization problem.\n\nSource 2: To further highlight the difference between a problem and an instance, consider the following instance of the decision version of the traveling salesman problem: Is there a route of at most 2000\n\nSource 3: An example of a decision problem is the following. The input is an arbitrary graph. The problem consists in deciding whether the given graph is connected, or not",
    "56e19724cd28a01900c679f9": "Source 1: . Notable examples include the traveling salesman problem and the integer factorization problem.\n\nSource 2: To further highlight the difference between a problem and an instance, consider the following instance of the decision version of the traveling salesman problem: Is there a route of at most 2000\n\nSource 3: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't",
    "56e19724cd28a01900c679fa": "Source 1: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 2: . If the answer is yes, many important problems can be shown to have more efficient solutions\n\nSource 3: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0",
    "56e1a0dccd28a01900c67a2e": "Source 1: . However, this is not really the case, since function problems can be recast as decision problems\n\nSource 2: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 3: . The corresponding set of function problems is FP.",
    "56e1a0dccd28a01900c67a2f": "Source 1: . For example, the multiplication of two integers can be expressed as the set of triples (a, b, c) such that the relation a \u00d7 b = c holds\n\nSource 2: . Indeed, this can be done by giving the same input to both inputs of the multiplication algorithm\n\nSource 3: . For example, the problem of squaring an integer can be reduced to the problem of multiplying two integers. This means an algorithm for multiplying two integers can be used to square an integer",
    "56e1a38de3433e140042305c": "Source 1: To measure the difficulty of solving a computational problem, one may wish to see how much time the best algorithm requires to solve the problem\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of",
    "56e1a38de3433e140042305d": "Source 1: . However, the running time may, in general, depend on the instance. In particular, larger instances will require more time to solve\n\nSource 2: . If we allow polynomial variations in running time, Cobham-Edmonds thesis states that \"the time complexities in any two reasonable and general models of computation are polynomially related\"\n\nSource 3: But bounding the computation time above by some concrete function f(n) often yields complexity classes that depend on the chosen machine model",
    "56e1a38de3433e140042305e": "Source 1: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance\n\nSource 2: To measure the difficulty of solving a computational problem, one may wish to see how much time the best algorithm requires to solve the problem\n\nSource 3: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used",
    "56e1a38de3433e140042305f": "Source 1: . This is usually taken to be the size of the input in bits. Complexity theory is interested in how algorithms scale with an increase in the input size\n\nSource 2: If the input size is n, the time taken can be expressed as a function of n\n\nSource 3: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance",
    "56e1a38de3433e1400423060": "Source 1: . This is usually taken to be the size of the input in bits. Complexity theory is interested in how algorithms scale with an increase in the input size\n\nSource 2: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms\n\nSource 3: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.",
    "56e1a564cd28a01900c67a48": "Source 1: . Cobham's thesis says that a problem can be solved with a feasible amount of resources if it admits a polynomial time algorithm.\n\nSource 2: . In fact, the Cobham\u2013Edmonds thesis states that only those problems that can be solved in polynomial time can be feasibly computed on some computational device\n\nSource 3: . It is believed that if a problem can be solved by an algorithm, there exists a Turing machine that solves the problem. Indeed, this is the statement of the Church\u2013Turing thesis",
    "56e1a564cd28a01900c67a49": "Source 1: If the input size is n, the time taken can be expressed as a function of n\n\nSource 2: . Since some inputs of size n may be faster to solve than others, we define the following complexities:\n\nSource 3: . For small n, say 100, and assuming for the sake of example that the computer does 1012 operations each second, the program would run for about 4 \u00d7 1010 years, which is the same order of magnitude as",
    "56e1a564cd28a01900c67a4a": "Source 1: If the input size is n, the time taken can be expressed as a function of n\n\nSource 2: . For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).\n\nSource 3: . Since the time taken on different inputs of the same size can be different, the worst-case time complexity T(n) is defined to be the maximum time taken over all inputs of size n",
    "56e1a564cd28a01900c67a4b": "Source 1: . Since the time taken on different inputs of the same size can be different, the worst-case time complexity T(n) is defined to be the maximum time taken over all inputs of size n\n\nSource 2: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 3: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms",
    "56e1a564cd28a01900c67a4c": "Source 1: . If T(n) is a polynomial in n, then the algorithm is said to be a polynomial time algorithm\n\nSource 2: . To show an upper bound T(n) on the time complexity of a problem, one needs to show only that there is a particular algorithm with running time at most T(n)\n\nSource 3: . To show a lower bound of T(n) for a problem requires showing that no algorithm can have time complexity lower than T(n).",
    "56e1aba0e3433e1400423094": "Source 1: A Turing machine is a mathematical model of a general computing machine. It is a theoretical device that manipulates symbols contained on a strip of tape\n\nSource 2: . Turing machines are not intended as a practical computing technology, but rather as a thought experiment representing a computing machine\u2014anything from an advanced supercomputer to a mathematician\n\nSource 3: . Clearly, this model is not meant to be a physically realizable model, it is just a theoretically interesting abstract machine that gives rise to particularly interesting complexity classes",
    "56e1aba0e3433e1400423095": "Source 1: . It is believed that if a problem can be solved by an algorithm, there exists a Turing machine that solves the problem. Indeed, this is the statement of the Church\u2013Turing thesis\n\nSource 2: . Since Turing machines are easy to analyze mathematically, and are believed to be as powerful as any other model of computation, the Turing machine is the most commonly used model in complexity\n\nSource 3: Turing machines",
    "56e1aba0e3433e1400423097": "Source 1: complexity theory\n\nSource 2: . Since Turing machines are easy to analyze mathematically, and are believed to be as powerful as any other model of computation, the Turing machine is the most commonly used model in complexity\n\nSource 3: . Clearly, this model is not meant to be a physically realizable model, it is just a theoretically interesting abstract machine that gives rise to particularly interesting complexity classes",
    "56e1aba0e3433e1400423098": "Source 1: A Turing machine is a mathematical model of a general computing machine. It is a theoretical device that manipulates symbols contained on a strip of tape\n\nSource 2: Turing machines\n\nSource 3: Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines",
    "56e1aff7cd28a01900c67a68": "Source 1: A deterministic Turing machine is the most basic Turing machine, which uses a fixed set of rules to determine its future actions\n\nSource 2: Turing machines\n\nSource 3: A Turing machine is a mathematical model of a general computing machine. It is a theoretical device that manipulates symbols contained on a strip of tape",
    "56e1aff7cd28a01900c67a69": "Source 1: A deterministic Turing machine is the most basic Turing machine, which uses a fixed set of rules to determine its future actions\n\nSource 2: . A non-deterministic Turing machine is a deterministic Turing machine with an added feature of non-determinism, which allows a Turing machine to have multiple possible future actions from a given\n\nSource 3: Turing machines",
    "56e1aff7cd28a01900c67a6a": "Source 1: . A probabilistic Turing machine is a deterministic Turing machine with an extra supply of random bits\n\nSource 2: . A non-deterministic Turing machine is a deterministic Turing machine with an added feature of non-determinism, which allows a Turing machine to have multiple possible future actions from a given\n\nSource 3: Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines",
    "56e1aff7cd28a01900c67a6b": "Source 1: Turing machines\n\nSource 2: . A non-deterministic Turing machine is a deterministic Turing machine with an added feature of non-determinism, which allows a Turing machine to have multiple possible future actions from a given\n\nSource 3: . For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once",
    "56e1aff7cd28a01900c67a6c": "Source 1: . The ability to make probabilistic decisions often helps algorithms solve problems more efficiently. Algorithms that use random bits are called randomized algorithms\n\nSource 2: . For examples, see non-deterministic algorithm.\n\nSource 3: . A probabilistic Turing machine is a deterministic Turing machine with an extra supply of random bits",
    "56e1b00ce3433e140042309e": "Source 1: Turing machines\n\nSource 2: which are defined using quantum Turing machines\n\nSource 3: . Turing machines are not intended as a practical computing technology, but rather as a thought experiment representing a computing machine\u2014anything from an advanced supercomputer to a mathematician",
    "56e1b00ce3433e140042309f": "Source 1: Turing machines\n\nSource 2: . Since Turing machines are easy to analyze mathematically, and are believed to be as powerful as any other model of computation, the Turing machine is the most commonly used model in complexity\n\nSource 3: . Turing machines are not intended as a practical computing technology, but rather as a thought experiment representing a computing machine\u2014anything from an advanced supercomputer to a mathematician",
    "56e1b00ce3433e14004230a1": "Source 1: Many types of Turing machines are used to define complexity classes, such as deterministic Turing machines, probabilistic Turing machines, non-deterministic Turing machines, quantum Turing machines,\n\nSource 2: Turing machines\n\nSource 3: .2). This forms the basis for the complexity class P, which is the set of decision problems solvable by a deterministic Turing machine within polynomial time",
    "56e1b169cd28a01900c67a72": "Source 1: Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines\n\nSource 2: A Turing machine is a mathematical model of a general computing machine. It is a theoretical device that manipulates symbols contained on a strip of tape\n\nSource 3: . For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once",
    "56e1b169cd28a01900c67a73": "Source 1: Turing machines\n\nSource 2: machines, symmetric Turing machines and alternating Turing machines\n\nSource 3: . Perhaps surprisingly, each of these models can be converted to another without providing any extra computational power. The time and memory consumption of these alternate models may vary",
    "56e1b169cd28a01900c67a74": "Source 1: . Perhaps surprisingly, each of these models can be converted to another without providing any extra computational power. The time and memory consumption of these alternate models may vary\n\nSource 2: resources it requires to operate\n\nSource 3: However, some computational problems are easier to analyze in terms of more unusual resources",
    "56e1b169cd28a01900c67a75": "Source 1: Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines\n\nSource 2: machines, symmetric Turing machines and alternating Turing machines\n\nSource 3: . What all these models have in common is that the machines operate deterministically.",
    "56e1b355e3433e14004230b0": "Source 1: . For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once\n\nSource 2: Turing machines\n\nSource 3: . A non-deterministic Turing machine is a deterministic Turing machine with an added feature of non-determinism, which allows a Turing machine to have multiple possible future actions from a given",
    "56e1b355e3433e14004230b1": "Source 1: However, some computational problems are easier to analyze in terms of more unusual resources\n\nSource 2: . A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a\n\nSource 3: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and",
    "56e1b355e3433e14004230b2": "Source 1: . The non-deterministic Turing machine has very little to do with how we physically want to compute algorithms, but its branching exactly captures many of the mathematical models we want to analyze,\n\nSource 2: to analyze, so that non-deterministic time is a very important resource in analyzing computational problems\n\nSource 3: . For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once",
    "56e1b355e3433e14004230b3": "Source 1: to analyze, so that non-deterministic time is a very important resource in analyzing computational problems\n\nSource 2: . The non-deterministic Turing machine has very little to do with how we physically want to compute algorithms, but its branching exactly captures many of the mathematical models we want to analyze,\n\nSource 3: . Since Turing machines are easy to analyze mathematically, and are believed to be as powerful as any other model of computation, the Turing machine is the most commonly used model in complexity",
    "56e1b62ecd28a01900c67aa3": "Source 1: . The time required by a deterministic Turing machine M on input x is the total number of state transitions, or steps, the machine makes before it halts and outputs the answer (\"yes\" or \"no\")\n\nSource 2: . For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).\n\nSource 3: For a precise definition of what it means to solve a problem using a given amount of time and space, a computational model such as the deterministic Turing machine is used",
    "56e1b62ecd28a01900c67aa4": "Source 1: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 2: complexity theory\n\nSource 3: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and",
    "56e1b62ecd28a01900c67aa5": "Source 1: For a precise definition of what it means to solve a problem using a given amount of time and space, a computational model such as the deterministic Turing machine is used\n\nSource 2: . For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).\n\nSource 3: . A decision problem A can be solved in time f(n) if there exists a Turing machine operating in time f(n) that solves the problem",
    "56e1b62ecd28a01900c67aa6": "Source 1: For a precise definition of what it means to solve a problem using a given amount of time and space, a computational model such as the deterministic Turing machine is used\n\nSource 2: . Since Turing machines are easy to analyze mathematically, and are believed to be as powerful as any other model of computation, the Turing machine is the most commonly used model in complexity\n\nSource 3: Earlier papers studying problems solvable by Turing machines with specific bounded resources include  John Myhill's definition of linear bounded automata (Myhill 1960), Raymond Smullyan's study of",
    "56e1b754cd28a01900c67abc": "Source 1: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 2: . For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively\n\nSource 3: resources it requires to operate",
    "56e1b754cd28a01900c67abd": "Source 1: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 2: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 3: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.",
    "56e1b754cd28a01900c67abe": "Source 1: . Complexity measures are very generally defined by the Blum complexity axioms\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of",
    "56e1b754cd28a01900c67abf": "Source 1: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 2: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 3: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource",
    "56e1b754cd28a01900c67ac0": "Source 1: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 2: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0\n\nSource 3: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of",
    "56e1b8f3e3433e14004230e6": "Source 1: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of",
    "56e1b8f3e3433e14004230e7": "Source 1: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 2: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 3: . Complexity measures are very generally defined by the Blum complexity axioms",
    "56e1b8f3e3433e14004230e8": "Source 1: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 2: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 3: . Somewhat earlier, Boris Trakhtenbrot (1956), a pioneer in the field from the USSR, studied another specific complexity measure. As he remembers:",
    "56e1b8f3e3433e14004230e9": "Source 1: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 2: . Since some inputs of size n may be faster to solve than others, we define the following complexities:\n\nSource 3: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.",
    "56e1ba41cd28a01900c67ae0": "Source 1: For example, consider the deterministic sorting algorithm quicksort. This solves the problem of sorting a list of integers that is given as the input\n\nSource 2: . If we assume that all possible permutations of the input list are equally likely, the average time taken for sorting is O(n log n)\n\nSource 3: efficient algorithm solving a given problem",
    "56e1ba41cd28a01900c67ae1": "Source 1: . Since some inputs of size n may be faster to solve than others, we define the following complexities:\n\nSource 2: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 3: . The worst-case is when the input is sorted or sorted in reverse order, and the algorithm takes time O(n2) for this case",
    "56e1ba41cd28a01900c67ae2": "Source 1: . Since the time taken on different inputs of the same size can be different, the worst-case time complexity T(n) is defined to be the maximum time taken over all inputs of size n\n\nSource 2: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 3: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms",
    "56e1bc3ae3433e1400423104": "Source 1: To classify the computation time (or similar resources, such as space consumption), one is interested in proving upper and lower bounds on the minimum amount of time required by the most efficient\n\nSource 2: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 3: . More precisely, it tries to classify problems that can or cannot be solved with appropriately restricted resources",
    "56e1bc3ae3433e1400423105": "Source 1: Closely related fields in theoretical computer science are analysis of algorithms and computability theory\n\nSource 2: . A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a\n\nSource 3: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms",
    "56e1bc3ae3433e1400423106": "Source 1: by Juris Hartmanis and Richard Stearns (1965), which laid out the definitions of time and space complexity and proved the hierarchy theorems\n\nSource 2: . The time element in construction means that a delay costs money, and in cases of bottlenecks, the delay can be extremely expensive\n\nSource 3: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:",
    "56e1bc3ae3433e1400423107": "Source 1: . To show an upper bound T(n) on the time complexity of a problem, one needs to show only that there is a particular algorithm with running time at most T(n)\n\nSource 2: . If T(n) is a polynomial in n, then the algorithm is said to be a polynomial time algorithm\n\nSource 3: . To show a lower bound of T(n) for a problem requires showing that no algorithm can have time complexity lower than T(n).",
    "56e1bc3ae3433e1400423108": "Source 1: . The phrase \"all possible algorithms\" includes not just the algorithms known today, but any algorithm that might be discovered in the future\n\nSource 2: A computational problem can be viewed as an infinite collection of instances together with a solution for every instance\n\nSource 3: . For examples, see non-deterministic algorithm.",
    "56e1bd4acd28a01900c67afc": "Source 1: Upper and lower bounds are usually stated using the big O notation, which hides constant factors and smaller terms\n\nSource 2: . However, proving lower bounds is much more difficult, since lower bounds make a statement about all possible algorithms that solve a given problem\n\nSource 3: To classify the computation time (or similar resources, such as space consumption), one is interested in proving upper and lower bounds on the minimum amount of time required by the most efficient",
    "56e1bd4acd28a01900c67afd": "Source 1: Upper and lower bounds are usually stated using the big O notation, which hides constant factors and smaller terms\n\nSource 2: . This makes the bounds independent of the specific details of the computational model used. For instance, if T(n) = 7n2 + 15n + 40, in big O notation one would write T(n) = O(n2).\n\nSource 3: 1 \u2212 xO, where x is usually around 0.05.",
    "56e1bd4acd28a01900c67afe": "Source 1: . This makes the bounds independent of the specific details of the computational model used. For instance, if T(n) = 7n2 + 15n + 40, in big O notation one would write T(n) = O(n2).\n\nSource 2: If the input size is n, the time taken can be expressed as a function of n\n\nSource 3: Upper and lower bounds are usually stated using the big O notation, which hides constant factors and smaller terms",
    "56e1bd4acd28a01900c67aff": "Source 1: Upper and lower bounds are usually stated using the big O notation, which hides constant factors and smaller terms\n\nSource 2: . This makes the bounds independent of the specific details of the computational model used. For instance, if T(n) = 7n2 + 15n + 40, in big O notation one would write T(n) = O(n2).\n\nSource 3: . To show an upper bound T(n) on the time complexity of a problem, one needs to show only that there is a particular algorithm with running time at most T(n)",
    "56e1c0f6cd28a01900c67b2c": "Source 1: Of course, some complexity classes have complicated definitions that do not fit into this framework. Thus, a typical complexity class has a definition like the following:\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: LeGrande writes that \"the formulation of a single all-encompassing definition of the term is extremely difficult, if not impossible",
    "56e1c0f6cd28a01900c67b2d": "Source 1: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 2: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 3: . Thus there are pairs of complexity classes such that one is properly included in the other",
    "56e1c0f6cd28a01900c67b2e": "Source 1: Of course, some complexity classes have complicated definitions that do not fit into this framework. Thus, a typical complexity class has a definition like the following:\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:",
    "56e1c2eee3433e1400423134": "Source 1: But bounding the computation time above by some concrete function f(n) often yields complexity classes that depend on the chosen machine model\n\nSource 2: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 3: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems",
    "56e1c2eee3433e1400423135": "Source 1: . For instance, the language {xx | x is any binary string} can be solved in linear time on a multi-tape Turing machine, but necessarily requires quadratic time in the model of single-tape Turing\n\nSource 2: Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines\n\nSource 3: For a precise definition of what it means to solve a problem using a given amount of time and space, a computational model such as the deterministic Turing machine is used",
    "56e1c2eee3433e1400423136": "Source 1: . For instance, the language {xx | x is any binary string} can be solved in linear time on a multi-tape Turing machine, but necessarily requires quadratic time in the model of single-tape Turing\n\nSource 2: programming language can be computed on a Turing machine\n\nSource 3: Turing machines",
    "56e1c2eee3433e1400423137": "Source 1: . If we allow polynomial variations in running time, Cobham-Edmonds thesis states that \"the time complexities in any two reasonable and general models of computation are polynomially related\"\n\nSource 2: . In fact, the Cobham\u2013Edmonds thesis states that only those problems that can be solved in polynomial time can be feasibly computed on some computational device\n\nSource 3: . Cobham's thesis says that a problem can be solved with a feasible amount of resources if it admits a polynomial time algorithm.",
    "56e1c2eee3433e1400423138": "Source 1: .2). This forms the basis for the complexity class P, which is the set of decision problems solvable by a deterministic Turing machine within polynomial time\n\nSource 2: . A decision problem A can be solved in time f(n) if there exists a Turing machine operating in time f(n) that solves the problem\n\nSource 3: Decision problems are one of the central objects of study in computational complexity theory",
    "56e1c3e1e3433e1400423148": "Source 1: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: . Thus there are pairs of complexity classes such that one is properly included in the other",
    "56e1c3e1e3433e1400423149": "Source 1: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 2: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance\n\nSource 3: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:",
    "56e1c3e1e3433e140042314a": "Source 1: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 2: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 3: . For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively",
    "56e1c4fce3433e140042314e": "Source 1: Many types of Turing machines are used to define complexity classes, such as deterministic Turing machines, probabilistic Turing machines, non-deterministic Turing machines, quantum Turing machines,\n\nSource 2: Other important complexity classes include BPP, ZPP and RP, which are defined using probabilistic Turing machines; AC and NC, which are defined using Boolean circuits; and BQP and QMA, which are\n\nSource 3: .2). This forms the basis for the complexity class P, which is the set of decision problems solvable by a deterministic Turing machine within polynomial time",
    "56e1c4fce3433e140042314f": "Source 1: Other important complexity classes include BPP, ZPP and RP, which are defined using probabilistic Turing machines; AC and NC, which are defined using Boolean circuits; and BQP and QMA, which are\n\nSource 2: . Again, there are many complexity classes between the two, such as NL and NC, and it is not known if they are distinct or equal classes.\n\nSource 3: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of",
    "56e1c4fce3433e1400423150": "Source 1: Other important complexity classes include BPP, ZPP and RP, which are defined using probabilistic Turing machines; AC and NC, which are defined using Boolean circuits; and BQP and QMA, which are\n\nSource 2: Many types of Turing machines are used to define complexity classes, such as deterministic Turing machines, probabilistic Turing machines, non-deterministic Turing machines, quantum Turing machines,\n\nSource 3: .2). This forms the basis for the complexity class P, which is the set of decision problems solvable by a deterministic Turing machine within polynomial time",
    "56e1c4fce3433e1400423151": "Source 1: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 2: The complexity class P is often seen as a mathematical abstraction modeling those computational tasks that admit an efficient algorithm. This hypothesis is called the Cobham\u2013Edmonds thesis\n\nSource 3: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems",
    "56e1c4fce3433e1400423152": "Source 1: . #P is an important complexity class of counting problems (not decision problems). Classes like IP and AM are defined using Interactive proof systems. ALL is the class of all decision problems.\n\nSource 2: Even though some proofs of complexity-theoretic theorems regularly assume some concrete choice of input encoding, one tries to keep the discussion abstract enough to be independent of the choice of\n\nSource 3: Other important complexity classes include BPP, ZPP and RP, which are defined using probabilistic Turing machines; AC and NC, which are defined using Boolean circuits; and BQP and QMA, which are",
    "56e1c720e3433e140042316a": "Source 1: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems\n\nSource 2: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 3: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria",
    "56e1c720e3433e140042316b": "Source 1: . In particular, although DTIME(n) is contained in DTIME(n2), it would be interesting to know if the inclusion is strict\n\nSource 2: . For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).\n\nSource 3: If the input size is n, the time taken can be expressed as a function of n",
    "56e1c720e3433e140042316c": "Source 1: . For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively\n\nSource 2: by Juris Hartmanis and Richard Stearns (1965), which laid out the definitions of time and space complexity and proved the hierarchy theorems\n\nSource 3: The time and space hierarchy theorems form the basis for most separation results of complexity classes",
    "56e1c720e3433e140042316d": "Source 1: . They are called hierarchy theorems because they induce a proper hierarchy on the classes defined by constraining the respective resources\n\nSource 2: . For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively\n\nSource 3: The time and space hierarchy theorems form the basis for most separation results of complexity classes",
    "56e1c720e3433e140042316e": "Source 1: . Having deduced such proper set inclusions, we can proceed to make quantitative statements about how much more additional time or space is needed in order to increase the number of problems that can\n\nSource 2: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance\n\nSource 3: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems",
    "56e1c7e2cd28a01900c67b74": "Source 1: The time and space hierarchy theorems form the basis for most separation results of complexity classes\n\nSource 2: ., it is possible that all these complexity classes collapse to one class. Proving that any of these classes are unequal would be a major breakthrough in complexity theory.\n\nSource 3: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems",
    "56e1c7e2cd28a01900c67b75": "Source 1: . For instance, the time hierarchy theorem tells us that P is strictly contained in EXPTIME, and the space hierarchy theorem tells us that L is strictly contained in PSPACE.\n\nSource 2: . They are called hierarchy theorems because they induce a proper hierarchy on the classes defined by constraining the respective resources\n\nSource 3: . For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively",
    "56e1c7e2cd28a01900c67b76": "Source 1: . For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively\n\nSource 2: . For instance, the time hierarchy theorem tells us that P is strictly contained in EXPTIME, and the space hierarchy theorem tells us that L is strictly contained in PSPACE.\n\nSource 3: The time and space hierarchy theorems form the basis for most separation results of complexity classes",
    "56e1c9bfe3433e1400423192": "Source 1: Of course, some complexity classes have complicated definitions that do not fit into this framework. Thus, a typical complexity class has a definition like the following:\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem",
    "56e1c9bfe3433e1400423193": "Source 1: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem\n\nSource 2: . For instance, if a problem X can be solved using an algorithm for Y, X is no more difficult than Y, and we say that X reduces to Y\n\nSource 3: reductions remain an unsolved problem",
    "56e1c9bfe3433e1400423194": "Source 1: . For instance, if a problem X can be solved using an algorithm for Y, X is no more difficult than Y, and we say that X reduces to Y\n\nSource 2: . Thus no problem in C is harder than X, since an algorithm for X allows us to solve any problem in C. Of course, the notion of hard problems depends on the type of reduction being used\n\nSource 3: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem",
    "56e1c9bfe3433e1400423195": "Source 1: . There are many different types of reductions, based on the method of reduction, such as Cook reductions, Karp reductions and Levin reductions, and the bound on the complexity of reductions, such as\n\nSource 2: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem\n\nSource 3: The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time",
    "56e1c9bfe3433e1400423196": "Source 1: such as polynomial-time reductions or log-space reductions\n\nSource 2: The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time\n\nSource 3: . For complexity classes larger than P, polynomial-time reductions are commonly used. In particular, the set of problems that are hard for NP is the set of NP-hard problems.",
    "56e1cbe2cd28a01900c67bac": "Source 1: The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time\n\nSource 2: . There are many different types of reductions, based on the method of reduction, such as Cook reductions, Karp reductions and Levin reductions, and the bound on the complexity of reductions, such as\n\nSource 3: reductions remain an unsolved problem",
    "56e1cbe2cd28a01900c67bad": "Source 1: The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time\n\nSource 2: . For example, the problem of squaring an integer can be reduced to the problem of multiplying two integers. This means an algorithm for multiplying two integers can be used to square an integer\n\nSource 3: such as polynomial-time reductions or log-space reductions",
    "56e1cbe2cd28a01900c67bae": "Source 1: The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time\n\nSource 2: such as polynomial-time reductions or log-space reductions\n\nSource 3: . Nevertheless, a polynomial time algorithm is not always practical. If its running time is, say, n15, it is unreasonable to consider it efficient and it is still useless except on small instances.",
    "56e1cbe2cd28a01900c67baf": "Source 1: . For example, the problem of squaring an integer can be reduced to the problem of multiplying two integers. This means an algorithm for multiplying two integers can be used to square an integer\n\nSource 2: . Indeed, this can be done by giving the same input to both inputs of the multiplication algorithm\n\nSource 3: . Thus we see that squaring is not more difficult than multiplication, since squaring can be reduced to multiplication.",
    "56e1cbe2cd28a01900c67bb0": "Source 1: The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time\n\nSource 2: . Thus we see that squaring is not more difficult than multiplication, since squaring can be reduced to multiplication.\n\nSource 3: such as polynomial-time reductions or log-space reductions",
    "56e1ce08e3433e14004231a4": "Source 1: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance",
    "56e1ce08e3433e14004231a5": "Source 1: This motivates the concept of a problem being hard for a complexity class. A problem X is hard for a class of problems C if every problem in C can be reduced to X\n\nSource 2: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem\n\nSource 3: . Thus no problem in C is harder than X, since an algorithm for X allows us to solve any problem in C. Of course, the notion of hard problems depends on the type of reduction being used",
    "56e1ce08e3433e14004231a6": "Source 1: . Thus no problem in C is harder than X, since an algorithm for X allows us to solve any problem in C. Of course, the notion of hard problems depends on the type of reduction being used\n\nSource 2: . For instance, if a problem X can be solved using an algorithm for Y, X is no more difficult than Y, and we say that X reduces to Y\n\nSource 3: This motivates the concept of a problem being hard for a complexity class. A problem X is hard for a class of problems C if every problem in C can be reduced to X",
    "56e1ce08e3433e14004231a8": "Source 1: . The complexity class NP, on the other hand, contains many problems that people would like to solve efficiently, but for which no efficient algorithm is known, such as the Boolean satisfiability\n\nSource 2: that are NP-complete\n\nSource 3: . For complexity classes larger than P, polynomial-time reductions are commonly used. In particular, the set of problems that are hard for NP is the set of NP-hard problems.",
    "56e1d9fee3433e14004231cb": "Source 1: .) Thus the class of NP-complete problems contains the most difficult problems in NP, in the sense that they are the ones most likely not to be in P\n\nSource 2: . The complexity class NP, on the other hand, contains many problems that people would like to solve efficiently, but for which no efficient algorithm is known, such as the Boolean satisfiability\n\nSource 3: Along the same lines, co-NP is the class containing the complement problems (i.e. problems with the yes/no answers reversed) of NP problems",
    "56e1d9fee3433e14004231cc": "Source 1: .) Thus the class of NP-complete problems contains the most difficult problems in NP, in the sense that they are the ones most likely not to be in P\n\nSource 2: Along the same lines, co-NP is the class containing the complement problems (i.e. problems with the yes/no answers reversed) of NP problems\n\nSource 3: . They are some of the very few NP problems not known to be in P or to be NP-complete.",
    "56e1d9fee3433e14004231cd": "Source 1: . Because the problem P = NP is not solved, being able to reduce a known NP-complete problem, \u03a02, to another problem, \u03a01, would indicate that there is no known polynomial-time solution for \u03a01\n\nSource 2: . Similarly, because all NP problems can be reduced to the set, finding an NP-complete problem that can be solved in polynomial time would mean that P = NP.\n\nSource 3: . This is because a polynomial-time solution to \u03a01 would yield a polynomial-time solution to \u03a02",
    "56e1d9fee3433e14004231ce": "Source 1: . Similarly, because all NP problems can be reduced to the set, finding an NP-complete problem that can be solved in polynomial time would mean that P = NP.\n\nSource 2: . Because the problem P = NP is not solved, being able to reduce a known NP-complete problem, \u03a02, to another problem, \u03a01, would indicate that there is no known polynomial-time solution for \u03a01\n\nSource 3: . For complexity classes larger than P, polynomial-time reductions are commonly used. In particular, the set of problems that are hard for NP is the set of NP-hard problems.",
    "56e1dc62cd28a01900c67bca": "Source 1: The complexity class P is often seen as a mathematical abstraction modeling those computational tasks that admit an efficient algorithm. This hypothesis is called the Cobham\u2013Edmonds thesis\n\nSource 2: . The complexity class NP, on the other hand, contains many problems that people would like to solve efficiently, but for which no efficient algorithm is known, such as the Boolean satisfiability\n\nSource 3: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria",
    "56e1dc62cd28a01900c67bcb": "Source 1: The complexity class P is often seen as a mathematical abstraction modeling those computational tasks that admit an efficient algorithm. This hypothesis is called the Cobham\u2013Edmonds thesis\n\nSource 2: . #P is an important complexity class of counting problems (not decision problems). Classes like IP and AM are defined using Interactive proof systems. ALL is the class of all decision problems.\n\nSource 3: .2). This forms the basis for the complexity class P, which is the set of decision problems solvable by a deterministic Turing machine within polynomial time",
    "56e1dc62cd28a01900c67bcc": "Source 1: . The complexity class NP, on the other hand, contains many problems that people would like to solve efficiently, but for which no efficient algorithm is known, such as the Boolean satisfiability\n\nSource 2: The complexity class P is often seen as a mathematical abstraction modeling those computational tasks that admit an efficient algorithm. This hypothesis is called the Cobham\u2013Edmonds thesis\n\nSource 3: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:",
    "56e1dc62cd28a01900c67bcd": "Source 1: . The complexity class NP, on the other hand, contains many problems that people would like to solve efficiently, but for which no efficient algorithm is known, such as the Boolean satisfiability\n\nSource 2: that are NP-complete\n\nSource 3: . They are some of the very few NP problems not known to be in P or to be NP-complete.",
    "5ad39d53604f3c001a3fe8d1": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: . Early Norman kings of England, as Dukes of Normandy, owed homage to the King of France for their land on the continent\n\nSource 3: . The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was",
    "5ad39d53604f3c001a3fe8d2": "Source 1: French civilization and language as well as Catholicism\n\nSource 2: . Northeastern France drains to the Rhine via the Moselle; smaller rivers drain the Vosges and Jura Mountains uplands\n\nSource 3: separate centers of power in southern France",
    "5ad39d53604f3c001a3fe8d3": "Source 1: . They were descended from Norse (\"Norman\" comes from \"Norseman\") raiders and pirates from Denmark, Iceland and Norway who, under their leader Rollo, agreed to swear fealty to King Charles III of West\n\nSource 2: . Early Norman kings of England, as Dukes of Normandy, owed homage to the King of France for their land on the continent\n\nSource 3: . They considered England to be their most important holding (it brought with it the title of King\u2014an important status symbol).",
    "5ad39d53604f3c001a3fe8d4": "Source 1: . Through generations of assimilation and mixing with the native Frankish and Roman-Gaulish populations, their descendants would gradually merge with the Carolingian-based cultures of West Francia\n\nSource 2: people, blending their maternal Frankish heritage with Old Norse traditions and customs to synthesize a unique \"Norman\" culture in the north of France\n\nSource 3: By the 6th century, the Rhine was within the borders of Francia",
    "5ad3a266604f3c001a3fea27": "Source 1: The Norman dynasty had a major political, cultural and military impact on medieval Europe and even the Near East\n\nSource 2: . The Normans are noted both for their culture, such as their unique Romanesque architecture and musical traditions, and for their significant military accomplishments and innovations\n\nSource 3: . The new Norman rulers were culturally and ethnically distinct from the old French aristocracy, most of whom traced their lineage to Franks of the Carolingian dynasty",
    "5ad3a266604f3c001a3fea28": "Source 1: . The Normans were famed for their martial spirit and eventually for their Christian piety, becoming exponents of the Catholic orthodoxy into which they assimilated\n\nSource 2: . He was regarded by the Gallicans and Protestants as a noble man who respected people's dignity and lives\n\nSource 3: roi Huguet (regarded by Roman Catholics as an infamous scoundrel) and other spirits, who instead of being in Purgatory came back to harm the living at night",
    "5ad3a266604f3c001a3fea29": "Source 1: . They adopted the Gallo-Romance language of the Frankish land they settled, their dialect becoming known as Norman, Normaund or Norman French, an important literary language\n\nSource 2: . Spanish is with French in adopting the Germanic vocalism Rin-, while Italian, Occitan and Portuguese retain the Latin Ren-.\n\nSource 3: . The Anglo-Norman language was eventually absorbed into the Anglo-Saxon language of their subjects (see Old English) and influenced it, helping (along with the Norse language of the earlier",
    "5ad3a266604f3c001a3fea2a": "Source 1: . Early Norman kings of England, as Dukes of Normandy, owed homage to the King of France for their land on the continent\n\nSource 2: . The Duchy of Normandy, which they formed by treaty with the French crown, was a great fief of medieval France, and under Richard I of Normandy was forged into a cohesive and formidable principality\n\nSource 3: . The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was",
    "5ad3a266604f3c001a3fea2b": "Source 1: In 1066, Duke William II of Normandy conquered England killing King Harold II at the Battle of Hastings\n\nSource 2: Subsequent to the Conquest, however, the Marches came completely under the dominance of William's most trusted Norman barons, including Bernard de Neufmarch\u00e9, Roger of Montgomery in Shropshire and\n\nSource 3: . The Duchy of Normandy, which they formed by treaty with the French crown, was a great fief of medieval France, and under Richard I of Normandy was forged into a cohesive and formidable principality",
    "5ad3ab70604f3c001a3feb89": "Source 1: The English name \"Normans\" comes from the French words Normans/Normanz, plural of Normant, modern French normand, which is itself borrowed from Old Low Franconian Nortmann \"Northman\" or directly from\n\nSource 2: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 3: from Old Norse Nor\u00f0ma\u00f0r, Latinized variously as Nortmannus, Normannus, or Nordmannus (recorded in Medieval Latin, 9th century) to mean \"Norseman, Viking\"",
    "5ad3ab70604f3c001a3feb8a": "Source 1: The English name \"Normans\" comes from the French words Normans/Normanz, plural of Normant, modern French normand, which is itself borrowed from Old Low Franconian Nortmann \"Northman\" or directly from\n\nSource 2: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 3: . The Norman language was forged by the adoption of the indigenous langue d'o\u00efl branch of Romance by a Norse-speaking ruling class, and it developed into the regional language that survives today.",
    "5ad3ad61604f3c001a3fec0d": "Source 1: In the course of the 10th century, the initially destructive incursions of Norse war bands into the rivers of France evolved into more permanent encampments that included local women and personal\n\nSource 2: . It was introduced in Norway in 1349 when a ship landed at Ask\u00f8y, then spread to Bj\u00f8rgvin (modern Bergen) and Iceland. Finally it spread to northwestern Russia in 1351\n\nSource 3: . Over 60% of Norway's population died in 1348\u201350. The last plague outbreak ravaged Oslo in 1654.",
    "5ad3ad61604f3c001a3fec0e": "Source 1: . In the 9th, it formed part of the border between Middle and Western Francia, but in the 10th century, it was fully within the Holy Roman Empire, flowing through Swabia, Franconia and Lower Lorraine\n\nSource 2: . The treaty offered Rollo and his men the French lands between the river Epte and the Atlantic coast in exchange for their protection against further Viking incursions\n\nSource 3: . The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was",
    "5ad3ad61604f3c001a3fec0f": "Source 1: . The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was\n\nSource 2: . The warfare was definitively quelled in 1598, when Henry of Navarre, having succeeded to the French throne as Henry IV, and having recanted Protestantism in favour of Roman Catholicism, issued the\n\nSource 3: Following the treaty, King George III issued the Royal Proclamation of 1763 on October 7, 1763, which outlined the division and administration of the newly conquered territory, and to some extent",
    "5ad3ad61604f3c001a3fec10": "Source 1: . The treaty offered Rollo and his men the French lands between the river Epte and the Atlantic coast in exchange for their protection against further Viking incursions\n\nSource 2: . Rollo's contingents who raided and ultimately settled Normandy and parts of the Atlantic coast included Danes, Norwegians, Norse\u2013Gaels, Orkney Vikings, possibly Swedes, and Anglo-Danes from the\n\nSource 3: Before Rollo's arrival, its populations did not differ from Picardy or the \u00cele-de-France, which were considered \"Frankish\"",
    "5ad3ae14604f3c001a3fec39": "Source 1: . Rollo's contingents who raided and ultimately settled Normandy and parts of the Atlantic coast included Danes, Norwegians, Norse\u2013Gaels, Orkney Vikings, possibly Swedes, and Anglo-Danes from the\n\nSource 2: . The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was\n\nSource 3: Before Rollo's arrival, its populations did not differ from Picardy or the \u00cele-de-France, which were considered \"Frankish\"",
    "5ad3ae14604f3c001a3fec3a": "Source 1: . Rollo's contingents who raided and ultimately settled Normandy and parts of the Atlantic coast included Danes, Norwegians, Norse\u2013Gaels, Orkney Vikings, possibly Swedes, and Anglo-Danes from the\n\nSource 2: . They were descended from Norse (\"Norman\" comes from \"Norseman\") raiders and pirates from Denmark, Iceland and Norway who, under their leader Rollo, agreed to swear fealty to King Charles III of West\n\nSource 3: The descendants of Rollo's Vikings and their Frankish wives would replace the Norse religion and Old Norse language with Catholicism (Christianity) and the Gallo-Romance language of the local people,",
    "5ad3af11604f3c001a3fec63": "Source 1: The descendants of Rollo's Vikings and their Frankish wives would replace the Norse religion and Old Norse language with Catholicism (Christianity) and the Gallo-Romance language of the local people,\n\nSource 2: the Danish Vikings\n\nSource 3: from the English Danelaw under Norse control",
    "5ad3af11604f3c001a3fec64": "Source 1: people, blending their maternal Frankish heritage with Old Norse traditions and customs to synthesize a unique \"Norman\" culture in the north of France\n\nSource 2: The descendants of Rollo's Vikings and their Frankish wives would replace the Norse religion and Old Norse language with Catholicism (Christianity) and the Gallo-Romance language of the local people,\n\nSource 3: from Old Norse Nor\u00f0ma\u00f0r, Latinized variously as Nortmannus, Normannus, or Nordmannus (recorded in Medieval Latin, 9th century) to mean \"Norseman, Viking\"",
    "5ad3af11604f3c001a3fec65": "Source 1: . They adopted the Gallo-Romance language of the Frankish land they settled, their dialect becoming known as Norman, Normaund or Norman French, an important literary language\n\nSource 2: The descendants of Rollo's Vikings and their Frankish wives would replace the Norse religion and Old Norse language with Catholicism (Christianity) and the Gallo-Romance language of the local people,\n\nSource 3: . Spanish is with French in adopting the Germanic vocalism Rin-, while Italian, Occitan and Portuguese retain the Latin Ren-.",
    "5ad3c626604f3c001a3ff011": "Source 1: The Normans thereafter adopted the growing feudal doctrines of the rest of France, and worked them into a functional hierarchical system in both Normandy and in England\n\nSource 2: . The Normans were famed for their martial spirit and eventually for their Christian piety, becoming exponents of the Catholic orthodoxy into which they assimilated\n\nSource 3: . They adopted the Gallo-Romance language of the Frankish land they settled, their dialect becoming known as Norman, Normaund or Norman French, an important literary language",
    "5ad3c626604f3c001a3ff012": "Source 1: . Most Norman knights remained poor and land-hungry, and by 1066 Normandy had been exporting fighting horsemen for more than a generation\n\nSource 2: . The Normans are noted both for their culture, such as their unique Romanesque architecture and musical traditions, and for their significant military accomplishments and innovations\n\nSource 3: The Norman dynasty had a major political, cultural and military impact on medieval Europe and even the Near East",
    "5ad3c626604f3c001a3ff013": "Source 1: . Many Normans of Italy, France and England eventually served as avid Crusaders under the Italo-Norman prince Bohemund I and the Anglo-Norman king Richard the Lion-Heart.\n\nSource 2: Several families of Byzantine Greece were of Norman mercenary origin during the period of the Comnenian Restoration, when Byzantine emperors were seeking out western European warriors\n\nSource 3: A few years after the First Crusade, in 1107, the Normans under the command of Bohemond, Robert's son, landed in Valona and besieged Dyrrachium using the most sophisticated military equipment of the",
    "5ad3dbc6604f3c001a3ff3e9": "Source 1: Soon after the Normans began to enter Italy, they entered the Byzantine Empire and then Armenia, fighting against the Pechenegs, the Bulgars, and especially the Seljuk Turks\n\nSource 2: Robert Guiscard, an other Norman adventurer previously elevated to the dignity of count of Apulia as the result of his military successes, ultimately drove the Byzantines out of southern Italy\n\nSource 3: in southern Italy amongst their Norman cousins",
    "5ad3dbc6604f3c001a3ff3ea": "Source 1: Soon after the Normans began to enter Italy, they entered the Byzantine Empire and then Armenia, fighting against the Pechenegs, the Bulgars, and especially the Seljuk Turks\n\nSource 2: . There is debate whether the Normans in Greek service actually were from Norman Italy, and it now seems likely only a few came from there\n\nSource 3: . Many Normans of Italy, France and England eventually served as avid Crusaders under the Italo-Norman prince Bohemund I and the Anglo-Norman king Richard the Lion-Heart.",
    "5ad3dbc6604f3c001a3ff3eb": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: The Normans were in contact with England from an early date\n\nSource 3: . Norman mercenaries were first encouraged to come to the south by the Lombards to act against the Byzantines, but they soon fought in Byzantine service in Sicily",
    "5ad3dbc6604f3c001a3ff3ec": "Source 1: . They were prominent alongside Varangian and Lombard contingents in the Sicilian campaign of George Maniaces in 1038\u201340\n\nSource 2: . Norman mercenaries were first encouraged to come to the south by the Lombards to act against the Byzantines, but they soon fought in Byzantine service in Sicily\n\nSource 3: Soon after the Normans began to enter Italy, they entered the Byzantine Empire and then Armenia, fighting against the Pechenegs, the Bulgars, and especially the Seljuk Turks",
    "5ad3de8b604f3c001a3ff467": "Source 1: One of the first Norman mercenaries to serve as a Byzantine general was Herv\u00e9 in the 1050s. By then however, there were already Norman mercenaries serving as far away as Trebizond and Georgia\n\nSource 2: . Norman mercenaries were first encouraged to come to the south by the Lombards to act against the Byzantines, but they soon fought in Byzantine service in Sicily\n\nSource 3: Several families of Byzantine Greece were of Norman mercenary origin during the period of the Comnenian Restoration, when Byzantine emperors were seeking out western European warriors",
    "5ad3de8b604f3c001a3ff468": "Source 1: One of the first Norman mercenaries to serve as a Byzantine general was Herv\u00e9 in the 1050s. By then however, there were already Norman mercenaries serving as far away as Trebizond and Georgia\n\nSource 2: . From 1073 to 1074, 8,000 of the 20,000 troops of the Armenian general Philaretus Brachamius were Normans\u2014formerly of Oursel\u2014led by Raimbaud\n\nSource 3: . Most Norman knights remained poor and land-hungry, and by 1066 Normandy had been exporting fighting horsemen for more than a generation",
    "5ad3de8b604f3c001a3ff469": "Source 1: . Forced to retreat, Alexius ceded the command to a high Albanian official named Comiscortes in the service of Byzantium\n\nSource 2: . Under these harsh circumstances, the locals accepted the call of emperor Alexius I Comnenus to join forces with the Byzantines against the Normans\n\nSource 3: Several families of Byzantine Greece were of Norman mercenary origin during the period of the Comnenian Restoration, when Byzantine emperors were seeking out western European warriors",
    "5ad3de8b604f3c001a3ff46a": "Source 1: One of the first Norman mercenaries to serve as a Byzantine general was Herv\u00e9 in the 1050s. By then however, there were already Norman mercenaries serving as far away as Trebizond and Georgia\n\nSource 2: Some Normans joined Turkish forces to aid in the destruction of the Armenians vassal-states of Sassoun and Taron in far eastern Anatolia\n\nSource 3: . Retaliating against the French Catholics, the Huguenots had their own militia.",
    "5ad3e96b604f3c001a3ff689": "Source 1: Some Normans joined Turkish forces to aid in the destruction of the Armenians vassal-states of Sassoun and Taron in far eastern Anatolia\n\nSource 2: . From 1073 to 1074, 8,000 of the 20,000 troops of the Armenian general Philaretus Brachamius were Normans\u2014formerly of Oursel\u2014led by Raimbaud\n\nSource 3: . Later, many took up service with the Armenian state further south in Cilicia and the Taurus Mountains. A Norman named Oursel led a force of \"Franks\" into the upper Euphrates valley in northern Syria",
    "5ad3e96b604f3c001a3ff68a": "Source 1: . Later, many took up service with the Armenian state further south in Cilicia and the Taurus Mountains. A Norman named Oursel led a force of \"Franks\" into the upper Euphrates valley in northern Syria\n\nSource 2: Some Normans joined Turkish forces to aid in the destruction of the Armenians vassal-states of Sassoun and Taron in far eastern Anatolia\n\nSource 3: emergence of the new state of Turkey in the Ottoman Anatolian heartland, as well as the creation of modern Balkan and Middle Eastern states, thus ending Turkish colonial ambitions",
    "5ad3e96b604f3c001a3ff68b": "Source 1: first Norman settlements were established\n\nSource 2: . The new Norman rulers were culturally and ethnically distinct from the old French aristocracy, most of whom traced their lineage to Franks of the Carolingian dynasty\n\nSource 3: . Norman mercenaries were first encouraged to come to the south by the Lombards to act against the Byzantines, but they soon fought in Byzantine service in Sicily",
    "5ad3e96b604f3c001a3ff68c": "Source 1: . Later, many took up service with the Armenian state further south in Cilicia and the Taurus Mountains. A Norman named Oursel led a force of \"Franks\" into the upper Euphrates valley in northern Syria\n\nSource 2: and was situated in the former Frankish kingdom of Neustria\n\nSource 3: Before Rollo's arrival, its populations did not differ from Picardy or the \u00cele-de-France, which were considered \"Frankish\"",
    "5ad3ea79604f3c001a3ff6e9": "Source 1: . Norman mercenaries were first encouraged to come to the south by the Lombards to act against the Byzantines, but they soon fought in Byzantine service in Sicily\n\nSource 2: One of the first Norman mercenaries to serve as a Byzantine general was Herv\u00e9 in the 1050s. By then however, there were already Norman mercenaries serving as far away as Trebizond and Georgia\n\nSource 3: . Most Norman knights remained poor and land-hungry, and by 1066 Normandy had been exporting fighting horsemen for more than a generation",
    "5ad3ea79604f3c001a3ff6ea": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: . The distinct cultural and ethnic identity of the Normans emerged initially in the first half of the 10th century, and it continued to evolve over the succeeding centuries.\n\nSource 3: The Normans thereafter adopted the growing feudal doctrines of the rest of France, and worked them into a functional hierarchical system in both Normandy and in England",
    "5ad3ea79604f3c001a3ff6eb": "Source 1: from Normans who served under George Maniaces in the Sicilian expedition of 1038\n\nSource 2: . They were prominent alongside Varangian and Lombard contingents in the Sicilian campaign of George Maniaces in 1038\u201340\n\nSource 3: . After allying himself with Croatia and the Catholic cities of Dalmatia, in 1081 he led an army of 30,000 men in 300 ships landing on the southern shores of Albania, capturing Valona, Kanina, Jericho",
    "5ad3ed26604f3c001a3ff799": "Source 1: The further decline of Byzantine state-of-affairs paved the road to a third attack in 1185, when a large Norman army invaded Dyrrachium, owing to the betrayal of high Byzantine officials\n\nSource 2: . The lack of supplies, disease and Byzantine resistance forced Bohemond to retreat from his campaign and sign a peace treaty with the Byzantines in the city of Deabolis.\n\nSource 3: Robert Guiscard, an other Norman adventurer previously elevated to the dignity of count of Apulia as the result of his military successes, ultimately drove the Byzantines out of southern Italy",
    "5ad3ed26604f3c001a3ff79a": "Source 1: . Having obtained the consent of pope Gregory VII and acting as his vassal, Robert continued his campaign conquering the Balkan peninsula as a foothold for western feudal lords and the Catholic Church\n\nSource 2: . Andrew Lortie (born Andr\u00e9 Lortie), a leading Huguenot theologian and writer who led the exiled community in London, became known for articulating their criticism of the Pope and the doctrine of",
    "5ad3ed26604f3c001a3ff79b": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: . The distinct cultural and ethnic identity of the Normans emerged initially in the first half of the 10th century, and it continued to evolve over the succeeding centuries.\n\nSource 3: led to the Norman conquest of England at the Battle of Hastings in 1066",
    "5ad3ed26604f3c001a3ff79c": "Source 1: . It consisted of 402 people (5 Government officials, 9 officers of marines, 2 drummers, and 39 privates, 5 soldiers' wives, and a child, 307 convicts, 17 convicts' wives, and 7 children)\n\nSource 2: . Approximately 1,000 British soldiers were killed or injured. The remaining 500 British troops, led by George Washington, retreated to Virginia\n\nSource 3: . Monckton's forces, including companies of Rogers' Rangers, forcibly removed thousands of Acadians, chasing down many who resisted, and sometimes committing atrocities",
    "5ad3ee2d604f3c001a3ff7e1": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: led to the Norman conquest of England at the Battle of Hastings in 1066\n\nSource 3: . The invading Normans and their descendants replaced the Anglo-Saxons as the ruling class of England",
    "5ad3ee2d604f3c001a3ff7e2": "Source 1: . Dissension among the high ranks coerced the Normans to retreat to Italy. They lost Dyrrachium, Valona, and Butrint in 1085, after the death of Robert.\n\nSource 2: A few years after the First Crusade, in 1107, the Normans under the command of Bohemond, Robert's son, landed in Valona and besieged Dyrrachium using the most sophisticated military equipment of the\n\nSource 3: . The city's garrison resisted until February 1082, when Dyrrachium was betrayed to the Normans by the Venetian and Amalfitan merchants who had settled there",
    "5ad3ee2d604f3c001a3ff7e3": "Source 1: . After the successful Siege of Antioch in 1097, Bohemond began carving out an independent principality around that city\n\nSource 2: . Bohemond was the de facto leader of the Crusade during its passage through Asia Minor\n\nSource 3: de Bohun line of French royalty descended from Charlemagne, Jean Postell of Dieppe France, Alexander Pepin, Antoine Poitevin of Orsement France, and Jacques de Bordeaux of Grenoble, immigrated to the",
    "5ad3f028604f3c001a3ff823": "Source 1: The further decline of Byzantine state-of-affairs paved the road to a third attack in 1185, when a large Norman army invaded Dyrrachium, owing to the betrayal of high Byzantine officials\n\nSource 2: . Some time later, Dyrrachium\u2014one of the most important naval bases of the Adriatic\u2014fell again to Byzantine hands.\n\nSource 3: . The city's garrison resisted until February 1082, when Dyrrachium was betrayed to the Normans by the Venetian and Amalfitan merchants who had settled there",
    "5ad3f028604f3c001a3ff824": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: . The invading Normans and their descendants replaced the Anglo-Saxons as the ruling class of England\n\nSource 3: . They were descended from Norse (\"Norman\" comes from \"Norseman\") raiders and pirates from Denmark, Iceland and Norway who, under their leader Rollo, agreed to swear fealty to King Charles III of West",
    "5ad3f028604f3c001a3ff825": "Source 1: first Norman settlements were established\n\nSource 2: The Normans thereafter adopted the growing feudal doctrines of the rest of France, and worked them into a functional hierarchical system in both Normandy and in England\n\nSource 3: . The Normans are noted both for their culture, such as their unique Romanesque architecture and musical traditions, and for their significant military accomplishments and innovations",
    "5ad3f187604f3c001a3ff86f": "Source 1: . His stay in Normandy (until 1016) influenced him and his sons by Emma, who stayed in Normandy after Cnut the Great's conquest of the isle.\n\nSource 2: . This relationship eventually produced closer ties of blood through the marriage of Emma, sister of Duke Richard II of Normandy, and King Ethelred II of England\n\nSource 3: . It was commissioned by Odo, the Bishop of Bayeux and first Earl of Kent, employing natives from Kent who were learned in the Nordic traditions imported in the previous half century by the Danish",
    "5ad3f187604f3c001a3ff870": "Source 1: . Because of this, Ethelred fled to Normandy in 1013, when he was forced from his kingdom by Sweyn Forkbeard\n\nSource 2: . The Duchy of Normandy, which they formed by treaty with the French crown, was a great fief of medieval France, and under Richard I of Normandy was forged into a cohesive and formidable principality\n\nSource 3: In 1066, Duke William II of Normandy conquered England killing King Harold II at the Battle of Hastings",
    "5ad3f187604f3c001a3ff871": "Source 1: . Not only were their original Viking brethren still ravaging the English coasts, they occupied most of the important ports opposite England across the English Channel\n\nSource 2: . They considered England to be their most important holding (it brought with it the title of King\u2014an important status symbol).\n\nSource 3: affecting England",
    "5ad3f350604f3c001a3ff8ef": "Source 1: When finally Edward the Confessor returned from his father's refuge in 1041, at the invitation of his half-brother Harthacnut, he brought with him a Norman-educated mind\n\nSource 2: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 3: in the exile of Earl Godwin of Wessex",
    "5ad3f350604f3c001a3ff8f0": "Source 1: When finally Edward the Confessor returned from his father's refuge in 1041, at the invitation of his half-brother Harthacnut, he brought with him a Norman-educated mind\n\nSource 2: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 3: . His stay in Normandy (until 1016) influenced him and his sons by Emma, who stayed in Normandy after Cnut the Great's conquest of the isle.",
    "5ad3f350604f3c001a3ff8f1": "Source 1: . He appointed Robert of Jumi\u00e8ges archbishop of Canterbury and made Ralph the Timid earl of Hereford\n\nSource 2: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 3: . Having obtained the consent of pope Gregory VII and acting as his vassal, Robert continued his campaign conquering the Balkan peninsula as a foothold for western feudal lords and the Catholic Church",
    "5ad3f4b1604f3c001a3ff951": "Source 1: In 1066, Duke William II of Normandy conquered England killing King Harold II at the Battle of Hastings\n\nSource 2: led to the Norman conquest of England at the Battle of Hastings in 1066\n\nSource 3: When finally Edward the Confessor returned from his father's refuge in 1041, at the invitation of his half-brother Harthacnut, he brought with him a Norman-educated mind",
    "5ad3f4b1604f3c001a3ff952": "Source 1: Tran fight against the Mongol invasion\n\nSource 2: In the course of the 10th century, the initially destructive incursions of Norse war bands into the rivers of France evolved into more permanent encampments that included local women and personal\n\nSource 3: led to the Norman conquest of England at the Battle of Hastings in 1066",
    "5ad3f4b1604f3c001a3ff953": "Source 1: . The invading Normans and their descendants replaced the Anglo-Saxons as the ruling class of England\n\nSource 2: . The new Norman rulers were culturally and ethnically distinct from the old French aristocracy, most of whom traced their lineage to Franks of the Carolingian dynasty\n\nSource 3: The Normans thereafter adopted the growing feudal doctrines of the rest of France, and worked them into a functional hierarchical system in both Normandy and in England",
    "5ad3f4b1604f3c001a3ff954": "Source 1: . They considered England to be their most important holding (it brought with it the title of King\u2014an important status symbol).\n\nSource 2: . Many of the older colonies had land claims that extended arbitrarily far to the west, as the extent of the continent was unknown at the time their provincial charters were granted\n\nSource 3: their own settlement and thereby challenge British rights to the continent",
    "5ad3f5b0604f3c001a3ff9ab": "Source 1: Eventually, the Normans merged with the natives, combining languages and traditions. In the course of the Hundred Years' War, the Norman aristocracy often identified themselves as English\n\nSource 2: French civilization and language as well as Catholicism\n\nSource 3: . Early Norman kings of England, as Dukes of Normandy, owed homage to the King of France for their land on the continent",
    "5ad3f5b0604f3c001a3ff9ac": "Source 1: . The Anglo-Norman language was eventually absorbed into the Anglo-Saxon language of their subjects (see Old English) and influenced it, helping (along with the Norse language of the earlier\n\nSource 2: . The Anglo-Norman language became distinct from the Latin language, something that was the subject of some humour by Geoffrey Chaucer\n\nSource 3: . The Norman language was forged by the adoption of the indigenous langue d'o\u00efl branch of Romance by a Norse-speaking ruling class, and it developed into the regional language that survives today.",
    "5ad3f5b0604f3c001a3ff9ad": "Source 1: . The Anglo-Norman language became distinct from the Latin language, something that was the subject of some humour by Geoffrey Chaucer\n\nSource 2: language in 1530\n\nSource 3: . Spanish is with French in adopting the Germanic vocalism Rin-, while Italian, Occitan and Portuguese retain the Latin Ren-.",
    "5ad3f6f5604f3c001a3ffa09": "Source 1: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 2: The Normans were in contact with England from an early date\n\nSource 3: . The distinct cultural and ethnic identity of the Normans emerged initially in the first half of the 10th century, and it continued to evolve over the succeeding centuries.",
    "5ad3f6f5604f3c001a3ffa0a": "Source 1: The Normans had a profound effect on Irish culture and history after their invasion at Bannow Bay in 1169. Initially the Normans maintained a distinct culture and ethnicity\n\nSource 2: . Yet, with time, they came to be subsumed into Irish culture to the point that it has been said that they became \"more Irish than the Irish themselves\n\nSource 3: Ireland and elsewhere",
    "5ad3f6f5604f3c001a3ffa0b": "Source 1: .\" The Normans settled mostly in an area in the east of Ireland, later known as the Pale, and also built many fine castles and settlements, including Trim Castle and Dublin Castle\n\nSource 2: Protestants' settling in Ireland\n\nSource 3: Normans came into Scotland, building castles and founding noble families who would provide some future kings, such as Robert the Bruce, as well as founding a considerable number of the Scottish clans",
    "5ad3f7ac604f3c001a3ffa3b": "Source 1: . King Malcolm III of Scotland married Edgar's sister Margaret, and came into opposition to William who had already disputed Scotland's southern borders\n\nSource 2: One of the claimants of the English throne opposing William the Conqueror, Edgar Atheling, eventually fled to Scotland\n\nSource 3: . This relationship eventually produced closer ties of blood through the marriage of Emma, sister of Duke Richard II of Normandy, and King Ethelred II of England",
    "5ad3f7ac604f3c001a3ffa3c": "Source 1: . William invaded Scotland in 1072, riding as far as Abernethy where he met up with his fleet of ships\n\nSource 2: Normans came into Scotland, building castles and founding noble families who would provide some future kings, such as Robert the Bruce, as well as founding a considerable number of the Scottish clans\n\nSource 3: . King David I of Scotland, whose elder brother Alexander I had married Sybilla of Normandy, was instrumental in introducing Normans and Norman culture to Scotland, part of the process some scholars",
    "5ad3f7ac604f3c001a3ffa3d": "Source 1: . Malcolm submitted, paid homage to William and surrendered his son Duncan as a hostage, beginning a series of arguments as to whether the Scottish Crown owed allegiance to the King of England.\n\nSource 2: One of the claimants of the English throne opposing William the Conqueror, Edgar Atheling, eventually fled to Scotland\n\nSource 3: . King David I of Scotland, whose elder brother Alexander I had married Sybilla of Normandy, was instrumental in introducing Normans and Norman culture to Scotland, part of the process some scholars",
    "5ad3f8d2604f3c001a3ffa8d": "Source 1: . King David I of Scotland, whose elder brother Alexander I had married Sybilla of Normandy, was instrumental in introducing Normans and Norman culture to Scotland, part of the process some scholars\n\nSource 2: . Having spent time at the court of Henry I of England (married to David's sister Maud of Scotland), and needing them to wrestle the kingdom from his half-brother M\u00e1el Coluim mac Alaxandair, David had\n\nSource 3: . King Malcolm III of Scotland married Edgar's sister Margaret, and came into opposition to William who had already disputed Scotland's southern borders",
    "5ad3f8d2604f3c001a3ffa8e": "Source 1: . King David I of Scotland, whose elder brother Alexander I had married Sybilla of Normandy, was instrumental in introducing Normans and Norman culture to Scotland, part of the process some scholars\n\nSource 2: Normans came into Scotland, building castles and founding noble families who would provide some future kings, such as Robert the Bruce, as well as founding a considerable number of the Scottish clans\n\nSource 3: . The process was continued under David's successors, most intensely of all under William the Lion. The Norman-derived feudal system was applied in varying degrees to most of Scotland",
    "5ad3fb01604f3c001a3ffb35": "Source 1: Even before the Norman Conquest of England, the Normans had come into contact with Wales\n\nSource 2: . These Normans began a long period of slow conquest during which almost all of Wales was at some point subject to Norman interference\n\nSource 3: . In these original ventures, the Normans failed to make any headway into Wales.",
    "5ad3fb01604f3c001a3ffb36": "Source 1: When finally Edward the Confessor returned from his father's refuge in 1041, at the invitation of his half-brother Harthacnut, he brought with him a Norman-educated mind\n\nSource 2: . Edward the Confessor had set up the aforementioned Ralph as earl of Hereford and charged him with defending the Marches and warring with the Welsh\n\nSource 3: . He also brought many Norman counsellors and fighters, some of whom established an English cavalry force. This concept never really took root, but it is a typical example of the attitudes of Edward",
    "5ad3fb6e604f3c001a3ffb5f": "Source 1: Subsequent to the Conquest, however, the Marches came completely under the dominance of William's most trusted Norman barons, including Bernard de Neufmarch\u00e9, Roger of Montgomery in Shropshire and\n\nSource 2: In between the French and the British, large areas were dominated by native tribes\n\nSource 3: . In 1064, during the War of Barbastro, William of Montreuil led the papal army and took a huge booty.",
    "5ad3fb6e604f3c001a3ffb60": "Source 1: Even before the Norman Conquest of England, the Normans had come into contact with Wales\n\nSource 2: Subsequent to the Conquest, however, the Marches came completely under the dominance of William's most trusted Norman barons, including Bernard de Neufmarch\u00e9, Roger of Montgomery in Shropshire and\n\nSource 3: . These Normans began a long period of slow conquest during which almost all of Wales was at some point subject to Norman interference",
    "5ad3fc41604f3c001a3ffb8f": "Source 1: The legendary religious zeal of the Normans was exercised in religious wars long before the First Crusade carved out a Norman principality in Antioch\n\nSource 2: . The Duchy of Normandy, which they formed by treaty with the French crown, was a great fief of medieval France, and under Richard I of Normandy was forged into a cohesive and formidable principality\n\nSource 3: . Early Norman kings of England, as Dukes of Normandy, owed homage to the King of France for their land on the continent",
    "5ad3fc41604f3c001a3ffb90": "Source 1: . The distinct cultural and ethnic identity of the Normans emerged initially in the first half of the 10th century, and it continued to evolve over the succeeding centuries.\n\nSource 2: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 3: . The Normans are noted both for their culture, such as their unique Romanesque architecture and musical traditions, and for their significant military accomplishments and innovations",
    "5ad3fc41604f3c001a3ffb91": "Source 1: . They were major foreign participants in the Reconquista in Iberia. In 1018, Roger de Tosny travelled to the Iberian Peninsula to carve out a state for himself from Moorish lands, but failed\n\nSource 2: . After the successful Siege of Antioch in 1097, Bohemond began carving out an independent principality around that city\n\nSource 3: . After Spain ceded the Florida Territory to the United States in 1821, American settlers on the north side of the Cow Ford decided to plan a town, laying out the streets and plats",
    "5ad3fc41604f3c001a3ffb92": "Source 1: . Other, less frequently used names for the war include the Fourth Intercolonial War and the Great War for the Empire.\n\nSource 2: . Over the next few hundred years, further outbreaks occurred in 1361\u201362, 1369, 1379\u201383, 1389\u201393, and throughout the first half of the 15th century\n\nSource 3: . Long in conflict, the metropole nations declared war on each other in 1756, escalating the war from a regional affair into an intercontinental conflict.",
    "5ad3fccf604f3c001a3ffbb5": "Source 1: in southern Italy amongst their Norman cousins\n\nSource 2: . The Genoese traders fled, taking the plague by ship into Sicily and the south of Europe, whence it spread north\n\nSource 3: . Under the Norman abbot Robert de Grantmesnil, several monks of Saint-Evroul fled to southern Italy, where they were patronised by Robert Guiscard and established a Latin monastery at Sant'Eufemia",
    "5ad3fd68604f3c001a3ffbe7": "Source 1: The Normans thereafter adopted the growing feudal doctrines of the rest of France, and worked them into a functional hierarchical system in both Normandy and in England\n\nSource 2: The Normans (Norman: Nourmands; French: Normands; Latin: Normanni) were the people who in the 10th and 11th centuries gave their name to Normandy, a region in France\n\nSource 3: . The Duchy of Normandy, which began in 911 as a fiefdom, was established by the treaty of Saint-Clair-sur-Epte between King Charles III of West Francia and the famed Viking ruler Rollo, and was",
    "5ad3fd68604f3c001a3ffbe8": "Source 1: . Also at F\u00e9camp, the staff, around which neumes were oriented, was first developed and taught in the 11th century\n\nSource 2: Normandy was the site of several important developments in the history of classical music in the 11th century. F\u00e9camp Abbey and Saint-Evroul Abbey were centres of musical production and education\n\nSource 3: . The chief monasteries taking part in this \"renaissance\" of Norman art and scholarship were Mont-Saint-Michel, F\u00e9camp, Jumi\u00e8ges, Bec, Saint-Ouen, Saint-Evroul, and Saint-Wandrille",
    "5ad3fe0d604f3c001a3ffc1b": "Source 1: In Britain, Norman art primarily survives as stonework or metalwork, such as capitals and baptismal fonts\n\nSource 2: In the visual arts, the Normans did not have the rich and distinctive traditions of the cultures they conquered\n\nSource 3: . These centres were in contact with the so-called \"Winchester school\", which channeled a pure Carolingian artistic tradition to Normandy",
    "5ad3fe0d604f3c001a3ffc1c": "Source 1: In Britain, Norman art primarily survives as stonework or metalwork, such as capitals and baptismal fonts\n\nSource 2: . Many churches preserve sculptured fonts, capitals, and more importantly mosaics, which were common in Norman Italy and drew heavily on the Greek heritage\n\nSource 3: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued",
    "5ad3fe0d604f3c001a3ffc1d": "Source 1: . Lombard Salerno was a centre of ivorywork in the 11th century and this continued under Norman domination\n\nSource 2: . These centres were in contact with the so-called \"Winchester school\", which channeled a pure Carolingian artistic tradition to Normandy\n\nSource 3: In Britain, Norman art primarily survives as stonework or metalwork, such as capitals and baptismal fonts",
    "5ad3fe91604f3c001a3ffc47": "Source 1: By far the most famous work of Norman art is the Bayeux Tapestry, which is not a tapestry but a work of embroidery\n\nSource 2: In Britain, Norman art primarily survives as stonework or metalwork, such as capitals and baptismal fonts\n\nSource 3: this Norman creativity",
    "5ad3fe91604f3c001a3ffc48": "Source 1: . It was commissioned by Odo, the Bishop of Bayeux and first Earl of Kent, employing natives from Kent who were learned in the Nordic traditions imported in the previous half century by the Danish\n\nSource 2: By far the most famous work of Norman art is the Bayeux Tapestry, which is not a tapestry but a work of embroidery\n\nSource 3: . Rollo's contingents who raided and ultimately settled Normandy and parts of the Atlantic coast included Danes, Norwegians, Norse\u2013Gaels, Orkney Vikings, possibly Swedes, and Anglo-Danes from the",
    "5ad3ff1b604f3c001a3ffc73": "Source 1: The French Wars of Religion in the 16th century and French Revolution in the 18th successively destroyed much of what existed in the way of the architectural and artistic remnant of this Norman\n\nSource 2: . A series of three small civil wars known as the Huguenot rebellions broke out, mainly in southwestern France, between 1621 and 1629. revolted against royal authority\n\nSource 3: War, a much larger conflict between France and Great Britain",
    "5ad3ff1b604f3c001a3ffc74": "Source 1: . In 1898, Americans who opposed imperialism created the Anti-Imperialist League to oppose the US annexation of the Philippines and Cuba\n\nSource 2: turn of the 19th century\n\nSource 3: One of its earliest massive implementations was brought about by Egyptians against the British occupation in the 1919 Revolution",
    "5ad3ffd7604f3c001a3ffca7": "Source 1: In the visual arts, the Normans did not have the rich and distinctive traditions of the cultures they conquered\n\nSource 2: . The Normans are noted both for their culture, such as their unique Romanesque architecture and musical traditions, and for their significant military accomplishments and innovations\n\nSource 3: . The Normans were famed for their martial spirit and eventually for their Christian piety, becoming exponents of the Catholic orthodoxy into which they assimilated",
    "5ad3ffd7604f3c001a3ffca8": "Source 1: . However, in the early 11th century the dukes began a programme of church reform, encouraging the Cluniac reform of monasteries and patronising intellectual pursuits, especially the proliferation of\n\nSource 2: Other predecessors of the Reformed church included the pro-reform and Gallican Roman Catholics, such as Jacques Lefevre (c. 1455\u20131536)\n\nSource 3: . The country had a long history of struggles with the papacy by the time the Protestant Reformation finally arrived",
    "5ad3ffd7604f3c001a3ffca9": "Source 1: . The church was utilised by the dukes as a unifying force for their disparate duchy\n\nSource 2: . 1455\u20131536). The Gallicans briefly achieved independence for the French church, on the principle that the religion of France could not be controlled by the Bishop of Rome, a foreign power\n\nSource 3: . The Edict simultaneously protected Catholic interests by discouraging the founding of new Protestant churches in Catholic-controlled regions.[citation needed]",
    "5ad3ffd7604f3c001a3ffcaa": "Source 1: . Over the next few hundred years, further outbreaks occurred in 1361\u201362, 1369, 1379\u201383, 1389\u201393, and throughout the first half of the 15th century\n\nSource 2: . However, economic recovery had been observed at the beginning of the 14th century\n\nSource 3: . In the final decade of the 11th and first of the 12th century, Normandy experienced a golden age of illustrated manuscripts, but it was brief and the major scriptoria of Normandy ceased to function",
    "5ad400b0604f3c001a3ffcdf": "Source 1: In England, the period of Norman architecture immediately succeeds that of the Anglo-Saxon and precedes the Early Gothic\n\nSource 2: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued\n\nSource 3: the earlier Anglo-Norse settlers and the Latin used by the church) in the development of Middle English",
    "5ad400b0604f3c001a3ffce0": "Source 1: In England, the period of Norman architecture immediately succeeds that of the Anglo-Saxon and precedes the Early Gothic\n\nSource 2: After the 1940s, the Gothic style on campus began to give way to modern styles\n\nSource 3: . Their style was characterised by rounded arches, particularly over windows and doorways, and massive proportions.",
    "5ad400b0604f3c001a3ffce1": "Source 1: . In southern Italy, the Normans incorporated elements of Islamic, Lombard, and Byzantine building techniques into their own, initiating a unique style known as Norman-Arab architecture within the\n\nSource 2: . They spread a unique Romanesque idiom to England and Italy, and the encastellation of these regions with keeps in their north French style fundamentally altered the military landscape\n\nSource 3: In England, the period of Norman architecture immediately succeeds that of the Anglo-Saxon and precedes the Early Gothic",
    "5ad4017a604f3c001a3ffd1f": "Source 1: . Tancred was instrumental in the conquest of Jerusalem and he worked for the expansion of the Crusader kingdom in Transjordan and the region of Galilee.[citation needed]\n\nSource 2: . After the successful Siege of Antioch in 1097, Bohemond began carving out an independent principality around that city\n\nSource 3: In 1096, Crusaders passing by the siege of Amalfi were joined by Bohemond of Taranto and his nephew Tancred with an army of Italo-Normans",
    "5ad4017a604f3c001a3ffd20": "Source 1: . Tancred was instrumental in the conquest of Jerusalem and he worked for the expansion of the Crusader kingdom in Transjordan and the region of Galilee.[citation needed]\n\nSource 2: In 1096, Crusaders passing by the siege of Amalfi were joined by Bohemond of Taranto and his nephew Tancred with an army of Italo-Normans\n\nSource 3: When finally Edward the Confessor returned from his father's refuge in 1041, at the invitation of his half-brother Harthacnut, he brought with him a Norman-educated mind",
    "5ad401f2604f3c001a3ffd41": "Source 1: A few years after the First Crusade, in 1107, the Normans under the command of Bohemond, Robert's son, landed in Valona and besieged Dyrrachium using the most sophisticated military equipment of the\n\nSource 2: The conquest of Cyprus by the Anglo-Norman forces of the Third Crusade opened a new chapter in the history of the island, which would be under Western European domination for the following 380 years\n\nSource 3: . Many Normans of Italy, France and England eventually served as avid Crusaders under the Italo-Norman prince Bohemund I and the Anglo-Norman king Richard the Lion-Heart.",
    "5ad401f2604f3c001a3ffd42": "Source 1: . Although by 1000 CE, the Germanic conquest of central, western, and southern Europe (west of and including Italy) was complete, excluding only Muslim Iberia\n\nSource 2: in late antiquity, conquering Celtic and other peoples; and by 800 CE, forming the Holy Roman Empire, the first German Empire\n\nSource 3: The Norman dynasty had a major political, cultural and military impact on medieval Europe and even the Near East",
    "5ad40280604f3c001a3ffd57": "Source 1: . Dissension among the high ranks coerced the Normans to retreat to Italy. They lost Dyrrachium, Valona, and Butrint in 1085, after the death of Robert.\n\nSource 2: . They were prominent alongside Varangian and Lombard contingents in the Sicilian campaign of George Maniaces in 1038\u201340\n\nSource 3: from Normans who served under George Maniaces in the Sicilian expedition of 1038",
    "5ad40280604f3c001a3ffd58": "Source 1: In April 1191 Richard the Lion-hearted left Messina with a large fleet in order to reach Acre. But a storm dispersed the fleet\n\nSource 2: . Survivors of the wrecks had been taken prisoner by the island's despot Isaac Komnenos. On 1 May 1191, Richard's fleet arrived in the port of Limassol on Cyprus\n\nSource 3: . Beset by delays of all kinds, the expedition was finally ready to sail from Halifax, Nova Scotia in early August",
    "5ad40280604f3c001a3ffd59": "Source 1: The conquest of Cyprus by the Anglo-Norman forces of the Third Crusade opened a new chapter in the history of the island, which would be under Western European domination for the following 380 years\n\nSource 2: . Survivors of the wrecks had been taken prisoner by the island's despot Isaac Komnenos. On 1 May 1191, Richard's fleet arrived in the port of Limassol on Cyprus\n\nSource 3: . Before his departure, he named two of his Norman generals, Richard de Camville and Robert de Thornham, as governors of Cyprus.",
    "5ad402ce604f3c001a3ffd67": "Source 1: . The Normans are noted both for their culture, such as their unique Romanesque architecture and musical traditions, and for their significant military accomplishments and innovations\n\nSource 2: Norman architecture typically stands out as a new stage in the architectural history of the regions they subdued\n\nSource 3: . In southern Italy, the Normans incorporated elements of Islamic, Lombard, and Byzantine building techniques into their own, initiating a unique style known as Norman-Arab architecture within the",
    "5ad40358604f3c001a3ffd7d": "Source 1: The customary law of Normandy was developed between the 10th and 13th centuries and survives today through the legal systems of Jersey and Guernsey in the Channel Islands\n\nSource 2: first Norman settlements were established\n\nSource 3: . The distinct cultural and ethnic identity of the Normans emerged initially in the first half of the 10th century, and it continued to evolve over the succeeding centuries.",
    "5ad40358604f3c001a3ffd7e": "Source 1: . Norman customary law was transcribed in two customaries in Latin by two judges for use by them and their colleagues: These are the Tr\u00e8s ancien coutumier (Very ancient customary), authored between\n\nSource 2: The customary law of Normandy was developed between the 10th and 13th centuries and survives today through the legal systems of Jersey and Guernsey in the Channel Islands\n\nSource 3: between 1200 and 1245; and the Grand coutumier de Normandie (Great customary of Normandy, originally Summa de legibus Normanniae in curia la\u00efcali), authored between 1235 and 1245",
    "5ad40358604f3c001a3ffd7f": "Source 1: . In the final decade of the 11th and first of the 12th century, Normandy experienced a golden age of illustrated manuscripts, but it was brief and the major scriptoria of Normandy ceased to function\n\nSource 2: between 1200 and 1245; and the Grand coutumier de Normandie (Great customary of Normandy, originally Summa de legibus Normanniae in curia la\u00efcali), authored between 1235 and 1245\n\nSource 3: . Around 1294, a French version of the Scriptures was prepared by the Roman Catholic priest, Guyard de Moulin",
    "5ad403c1604f3c001a3ffd97": "Source 1: Bethencourt took the title of King of the Canary Islands, as vassal to Henry III of Castile\n\nSource 2: Between 1402 and 1405, the expedition led by the Norman noble Jean de Bethencourt and the Poitevine Gadifer de la Salle conquered the Canarian islands of Lanzarote, Fuerteventura and El Hierro off the\n\nSource 3: . In 1418, Jean's nephew Maciot de Bethencourt sold the rights to the islands to Enrique P\u00e9rez de Guzm\u00e1n, 2nd Count de Niebla.",
    "5ad403c1604f3c001a3ffd98": "Source 1: . In 1418, Jean's nephew Maciot de Bethencourt sold the rights to the islands to Enrique P\u00e9rez de Guzm\u00e1n, 2nd Count de Niebla.\n\nSource 2: . His exploit was well publicized and contributed to his reputation; he also derived significant financial gains from the conquest of the island. Richard left for Acre on 5 June, with his allies\n\nSource 3: The conquest of Cyprus by the Anglo-Norman forces of the Third Crusade opened a new chapter in the history of the island, which would be under Western European domination for the following 380 years",
    "5ad40419604f3c001a3ffdb7": "Source 1: Bethencourt took the title of King of the Canary Islands, as vassal to Henry III of Castile\n\nSource 2: Between 1402 and 1405, the expedition led by the Norman noble Jean de Bethencourt and the Poitevine Gadifer de la Salle conquered the Canarian islands of Lanzarote, Fuerteventura and El Hierro off the\n\nSource 3: . In 1418, Jean's nephew Maciot de Bethencourt sold the rights to the islands to Enrique P\u00e9rez de Guzm\u00e1n, 2nd Count de Niebla.",
    "5ad40419604f3c001a3ffdb8": "Source 1: Vietnam, Cambodia, Myanmar, the Philippines, Indonesia, part of New Guinea and some islands of the Pacific Ocean\n\nSource 2: . The region spans from Pacific Ocean islands, shorelines, beaches, and coastal plains, through the Transverse and Peninsular Ranges with their peaks, into the large and small interior valleys, to the\n\nSource 3: Islands and the French overseas departments",
    "5ad404a6604f3c001a3ffde1": "Source 1: . He made clear distinction between sodium carbonate and potassium carbonate, and drew attention to the poisonous nature of copper compounds, especially copper vitriol, and also lead compounds",
    "5ad404a6604f3c001a3ffde2": "Source 1: . He ordered Isaac to release the prisoners and the treasure. Isaac refused, so Richard landed his troops and took Limassol.\n\nSource 2: . But Isaac changed his mind and tried to escape. Richard then proceeded to conquer the whole island, his troops being led by Guy de Lusignan\n\nSource 3: . Before his departure, he named two of his Norman generals, Richard de Camville and Robert de Thornham, as governors of Cyprus.",
    "5ad404a6604f3c001a3ffde3": "",
    "5ad5316b5b96ef001a10ab72": "Source 1: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 2: . One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.\n\nSource 3: . In turn, imposing restrictions on the available resources is what distinguishes computational complexity from computability theory: the latter theory asks what kind of problems can, in principle, be",
    "5ad5316b5b96ef001a10ab73": "Source 1: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: . In computational complexity theory, a problem refers to the abstract question to be solved",
    "5ad5316b5b96ef001a10ab74": "Source 1: . A computational problem is understood to be a task that is in principle amenable to being solved by a computer, which is equivalent to stating that the problem may be solved by mechanical\n\nSource 2: . Even with a much faster computer, the program would only be useful for very small instances and in that sense the intractability of a problem is somewhat independent of technological progress\n\nSource 3: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used",
    "5ad5316b5b96ef001a10ab75": "Source 1: mechanical application of mathematical steps, such as an algorithm\n\nSource 2: be solved algorithmically\n\nSource 3: . A computational problem is understood to be a task that is in principle amenable to being solved by a computer, which is equivalent to stating that the problem may be solved by mechanical",
    "5ad5316b5b96ef001a10ab76": "Source 1: mechanical application of mathematical steps, such as an algorithm\n\nSource 2: be solved algorithmically\n\nSource 3: . These methods are used for a variety of applications",
    "5ad532575b96ef001a10ab7c": "Source 1: . A computational problem is understood to be a task that is in principle amenable to being solved by a computer, which is equivalent to stating that the problem may be solved by mechanical\n\nSource 2: . In computational complexity theory, a problem refers to the abstract question to be solved\n\nSource 3: A computational problem can be viewed as an infinite collection of instances together with a solution for every instance",
    "5ad532575b96ef001a10ab7d": "Source 1: . The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage\n\nSource 2: However, some computational problems are easier to analyze in terms of more unusual resources\n\nSource 3: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used",
    "5ad532575b96ef001a10ab7e": "Source 1: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 2: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 3: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.",
    "5ad532575b96ef001a10ab7f": "Source 1: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance",
    "5ad532575b96ef001a10ab80": "Source 1: number of processors (used in parallel computing)\n\nSource 2: . However, computing A or \u03bc requires the knowledge of infinitely many primes to begin with\n\nSource 3: a composite number",
    "5ad5344b5b96ef001a10ab86": "Source 1: Closely related fields in theoretical computer science are analysis of algorithms and computability theory\n\nSource 2: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 3: . The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage",
    "5ad5344b5b96ef001a10ab87": "Source 1: . A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a\n\nSource 2: Closely related fields in theoretical computer science are analysis of algorithms and computability theory\n\nSource 3: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms",
    "5ad5344b5b96ef001a10ab88": "Source 1: . A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a\n\nSource 2: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used\n\nSource 3: However, some computational problems are easier to analyze in terms of more unusual resources",
    "5ad5344b5b96ef001a10ab89": "Source 1: to solve a problem, whereas the latter asks a more general question about all possible algorithms that could be used to solve the same problem\n\nSource 2: . The phrase \"all possible algorithms\" includes not just the algorithms known today, but any algorithm that might be discovered in the future\n\nSource 3: . However, proving lower bounds is much more difficult, since lower bounds make a statement about all possible algorithms that solve a given problem",
    "5ad5344b5b96ef001a10ab8a": "Source 1: . More precisely, it tries to classify problems that can or cannot be solved with appropriately restricted resources\n\nSource 2: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used\n\nSource 3: Problems that can be solved in theory (e.g., given large but finite time), but which in practice take too long for their solutions to be useful, are known as intractable problems",
    "5ad5364c5b96ef001a10ab90": "Source 1: A computational problem can be viewed as an infinite collection of instances together with a solution for every instance\n\nSource 2: . Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.\n\nSource 3: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no",
    "5ad5364c5b96ef001a10ab91": "Source 1: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 2: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e\n\nSource 3: . Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.",
    "5ad5364c5b96ef001a10ab92": "Source 1: . In computational complexity theory, a problem refers to the abstract question to be solved\n\nSource 2: to solve a problem, whereas the latter asks a more general question about all possible algorithms that could be used to solve the same problem\n\nSource 3: . In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing",
    "5ad5364c5b96ef001a10ab93": "Source 1: . Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.\n\nSource 2: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 3: is, all other numbers) and produce as output only the single number 1",
    "5ad5364c5b96ef001a10ab94": "Source 1: . This is usually taken to be the size of the input in bits. Complexity theory is interested in how algorithms scale with an increase in the input size\n\nSource 2: . The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage\n\nSource 3: Even though some proofs of complexity-theoretic theorems regularly assume some concrete choice of input encoding, one tries to keep the discussion abstract enough to be independent of the choice of",
    "5ad537a15b96ef001a10ab9a": "Source 1: at most 2000 kilometres passing through all of Germany's 15 largest cities? The quantitative answer to this particular problem instance is of little use for solving other instances of the problem,\n\nSource 2: To further highlight the difference between a problem and an instance, consider the following instance of the decision version of the traveling salesman problem: Is there a route of at most 2000\n\nSource 3: the problem, such as asking for a round trip through all sites in Milan whose total length is at most 10 km",
    "5ad537a15b96ef001a10ab9b": "Source 1: . The instance is a number (e.g. 15) and the solution is \"yes\" if the number is prime and \"no\" otherwise (in this case \"no\")\n\nSource 2: . Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.\n\nSource 3: at most 2000 kilometres passing through all of Germany's 15 largest cities? The quantitative answer to this particular problem instance is of little use for solving other instances of the problem,",
    "5ad537a15b96ef001a10ab9c": "Source 1: To further highlight the difference between a problem and an instance, consider the following instance of the decision version of the traveling salesman problem: Is there a route of at most 2000\n\nSource 2: at most 2000 kilometres passing through all of Germany's 15 largest cities? The quantitative answer to this particular problem instance is of little use for solving other instances of the problem,\n\nSource 3: . Notable examples include the traveling salesman problem and the integer factorization problem.",
    "5ad537a15b96ef001a10ab9d": "Source 1: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 2: . One of the roles of computational complexity theory is to determine the practical limits on what computers can and cannot do.\n\nSource 3: . In turn, imposing restrictions on the available resources is what distinguishes computational complexity from computability theory: the latter theory asks what kind of problems can, in principle, be",
    "5ad5391e5b96ef001a10aba2": "Source 1: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e\n\nSource 2: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 3: .e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded",
    "5ad5391e5b96ef001a10aba3": "Source 1: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e\n\nSource 2: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 3: . In contrast, an instance of this problem is a rather concrete utterance, which can serve as the input for a decision problem. For example, consider the problem of primality testing",
    "5ad5391e5b96ef001a10aba4": "Source 1: . The input string for a computational problem is referred to as a problem instance, and should not be confused with the problem itself\n\nSource 2: . In computational complexity theory, a problem refers to the abstract question to be solved\n\nSource 3: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e",
    "5ad5391e5b96ef001a10aba5": "Source 1: . For example, integers can be represented in binary notation, and graphs can be encoded directly via their adjacency matrices, or by encoding their adjacency lists in binary.\n\nSource 2: .e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded\n\nSource 3: are encoded as binary strings",
    "5ad5391e5b96ef001a10aba6": "Source 1: . For example, integers can be represented in binary notation, and graphs can be encoded directly via their adjacency matrices, or by encoding their adjacency lists in binary.\n\nSource 2: . The formal language associated with this decision problem is then the set of all connected graphs\u2014of course, to obtain a precise definition of this language, one has to decide how graphs are encoded\n\nSource 3: graph with n vertices?",
    "5ad53b9d5b96ef001a10abc8": "Source 1: Decision problems are one of the central objects of study in computational complexity theory\n\nSource 2: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 3: . In computational complexity theory, a problem refers to the abstract question to be solved",
    "5ad53b9d5b96ef001a10abc9": "Source 1: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0\n\nSource 2: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no\n\nSource 3: . In computational complexity theory, a problem refers to the abstract question to be solved",
    "5ad53b9d5b96ef001a10abca": "Source 1: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no\n\nSource 2: is, it isn't just yes or no\n\nSource 3: . The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration",
    "5ad53b9d5b96ef001a10abcb": "Source 1: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0\n\nSource 2: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no\n\nSource 3: Decision problems are one of the central objects of study in computational complexity theory",
    "5ad53b9d5b96ef001a10abcc": "Source 1: . If the algorithm deciding this problem returns the answer yes, the algorithm is said to accept the input string, otherwise it is said to reject the input.\n\nSource 2: . The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration\n\nSource 3: . Stated another way, the instance is a particular input to the problem, and the solution is the output corresponding to the given input.",
    "5ad53d705b96ef001a10abd2": "Source 1: An example of a decision problem is the following. The input is an arbitrary graph. The problem consists in deciding whether the given graph is connected, or not\n\nSource 2: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no\n\nSource 3: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0",
    "5ad53d705b96ef001a10abd3": "Source 1: . The formal language associated with this decision problem is then the set of all connected graphs\u2014of course, to obtain a precise definition of this language, one has to decide how graphs are encoded\n\nSource 2: An example of a decision problem is the following. The input is an arbitrary graph. The problem consists in deciding whether the given graph is connected, or not\n\nSource 3: Decision problems are one of the central objects of study in computational complexity theory",
    "5ad53d705b96ef001a10abd4": "Source 1: . The formal language associated with this decision problem is then the set of all connected graphs\u2014of course, to obtain a precise definition of this language, one has to decide how graphs are encoded\n\nSource 2: . The objective is to decide, with the aid of an algorithm, whether a given input string is a member of the formal language under consideration\n\nSource 3: choice of encoding",
    "5ad53d705b96ef001a10abd5": "Source 1: LeGrande writes that \"the formulation of a single all-encompassing definition of the term is extremely difficult, if not impossible\n\nSource 2: . The formal language associated with this decision problem is then the set of all connected graphs\u2014of course, to obtain a precise definition of this language, one has to decide how graphs are encoded\n\nSource 3: which are defined using quantum Turing machines",
    "5ad53e615b96ef001a10abda": "Source 1: A computational problem can be viewed as an infinite collection of instances together with a solution for every instance\n\nSource 2: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 3: . A computational problem is understood to be a task that is in principle amenable to being solved by a computer, which is equivalent to stating that the problem may be solved by mechanical",
    "5ad53e615b96ef001a10abdb": "Source 1: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 2: A computational problem can be viewed as an infinite collection of instances together with a solution for every instance\n\nSource 3: . In computational complexity theory, a problem refers to the abstract question to be solved",
    "5ad53e615b96ef001a10abdc": "Source 1: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 2: . The corresponding set of function problems is FP.\n\nSource 3: . However, this is not really the case, since function problems can be recast as decision problems",
    "5ad53e615b96ef001a10abdd": "Source 1: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 2: . However, this is not really the case, since function problems can be recast as decision problems\n\nSource 3: . The corresponding set of function problems is FP.",
    "5ad53e615b96ef001a10abde": "Source 1: A function problem is a computational problem where a single output (of a total function) is expected for every input, but the output is more complex than that of a decision problem, that is, it isn't\n\nSource 2: . If the answer is yes, many important problems can be shown to have more efficient solutions\n\nSource 3: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0",
    "5ad53f815b96ef001a10abe4": "Source 1: . However, this is not really the case, since function problems can be recast as decision problems\n\nSource 2: . A decision problem can be viewed as a formal language, where the members of the language are instances whose output is yes, and the non-members are those instances whose output is no\n\nSource 3: . A decision problem is a special type of computational problem whose answer is either yes or no, or alternately either 1 or 0",
    "5ad53f815b96ef001a10abe5": "Source 1: . For example, the multiplication of two integers can be expressed as the set of triples (a, b, c) such that the relation a \u00d7 b = c holds\n\nSource 2: . Deciding whether a given triple is a member of this set corresponds to solving the problem of multiplying two numbers.\n\nSource 3: . Indeed, this can be done by giving the same input to both inputs of the multiplication algorithm",
    "5ad53f815b96ef001a10abe6": "Source 1: . Deciding whether a given triple is a member of this set corresponds to solving the problem of multiplying two numbers.\n\nSource 2: . For example, the multiplication of two integers can be expressed as the set of triples (a, b, c) such that the relation a \u00d7 b = c holds\n\nSource 3: . For example, the problem of squaring an integer can be reduced to the problem of multiplying two integers. This means an algorithm for multiplying two integers can be used to square an integer",
    "5ad541ad5b96ef001a10abea": "Source 1: To measure the difficulty of solving a computational problem, one may wish to see how much time the best algorithm requires to solve the problem\n\nSource 2: Computational complexity theory is a branch of the theory of computation in theoretical computer science that focuses on classifying computational problems according to their inherent difficulty, and\n\nSource 3: . In computational complexity theory, a problem refers to the abstract question to be solved",
    "5ad541ad5b96ef001a10abeb": "Source 1: to analyze, so that non-deterministic time is a very important resource in analyzing computational problems\n\nSource 2: . If we allow polynomial variations in running time, Cobham-Edmonds thesis states that \"the time complexities in any two reasonable and general models of computation are polynomially related\"\n\nSource 3: . However, the running time may, in general, depend on the instance. In particular, larger instances will require more time to solve",
    "5ad541ad5b96ef001a10abec": "Source 1: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance\n\nSource 2: To measure the difficulty of solving a computational problem, one may wish to see how much time the best algorithm requires to solve the problem\n\nSource 3: . For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively",
    "5ad541ad5b96ef001a10abed": "Source 1: . This is usually taken to be the size of the input in bits. Complexity theory is interested in how algorithms scale with an increase in the input size\n\nSource 2: . Also, in 1965 Edmonds defined a \"good\" algorithm as one with running time bounded by a polynomial of the input size.\n\nSource 3: . Since some inputs of size n may be faster to solve than others, we define the following complexities:",
    "5ad541ad5b96ef001a10abee": "Source 1: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance\n\nSource 2: To measure the difficulty of solving a computational problem, one may wish to see how much time the best algorithm requires to solve the problem\n\nSource 3: to analyze, so that non-deterministic time is a very important resource in analyzing computational problems",
    "5ad542db5b96ef001a10abf4": "Source 1: If the input size is n, the time taken can be expressed as a function of n\n\nSource 2: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance\n\nSource 3: . The time required by a deterministic Turing machine M on input x is the total number of state transitions, or steps, the machine makes before it halts and outputs the answer (\"yes\" or \"no\")",
    "5ad542db5b96ef001a10abf5": "Source 1: . Cobham's thesis says that a problem can be solved with a feasible amount of resources if it admits a polynomial time algorithm.\n\nSource 2: . In fact, the Cobham\u2013Edmonds thesis states that only those problems that can be solved in polynomial time can be feasibly computed on some computational device\n\nSource 3: . It is believed that if a problem can be solved by an algorithm, there exists a Turing machine that solves the problem. Indeed, this is the statement of the Church\u2013Turing thesis",
    "5ad542db5b96ef001a10abf6": "Source 1: If the input size is n, the time taken can be expressed as a function of n\n\nSource 2: . For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).\n\nSource 3: . Since the time taken on different inputs of the same size can be different, the worst-case time complexity T(n) is defined to be the maximum time taken over all inputs of size n",
    "5ad542db5b96ef001a10abf7": "Source 1: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 2: . Since the time taken on different inputs of the same size can be different, the worst-case time complexity T(n) is defined to be the maximum time taken over all inputs of size n\n\nSource 3: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms",
    "5ad542db5b96ef001a10abf8": "Source 1: . If T(n) is a polynomial in n, then the algorithm is said to be a polynomial time algorithm\n\nSource 2: . To show an upper bound T(n) on the time complexity of a problem, one needs to show only that there is a particular algorithm with running time at most T(n)\n\nSource 3: . For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).",
    "5ad543c05b96ef001a10abfe": "Source 1: A Turing machine is a mathematical model of a general computing machine. It is a theoretical device that manipulates symbols contained on a strip of tape\n\nSource 2: . Furthermore, it is known that everything that can be computed on other models of computation known to us today, such as a RAM machine, Conway's Game of Life, cellular automata or any programming\n\nSource 3: . Turing machines are not intended as a practical computing technology, but rather as a thought experiment representing a computing machine\u2014anything from an advanced supercomputer to a mathematician",
    "5ad543c05b96ef001a10abff": "Source 1: A Turing machine is a mathematical model of a general computing machine. It is a theoretical device that manipulates symbols contained on a strip of tape\n\nSource 2: Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines",
    "5ad543c05b96ef001a10ac00": "Source 1: . Turing machines are not intended as a practical computing technology, but rather as a thought experiment representing a computing machine\u2014anything from an advanced supercomputer to a mathematician\n\nSource 2: . Furthermore, it is known that everything that can be computed on other models of computation known to us today, such as a RAM machine, Conway's Game of Life, cellular automata or any programming\n\nSource 3: . The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage",
    "5ad543c05b96ef001a10ac01": "Source 1: be solved algorithmically\n\nSource 2: efficient algorithm solving a given problem\n\nSource 3: to solve a problem, whereas the latter asks a more general question about all possible algorithms that could be used to solve the same problem",
    "5ad545545b96ef001a10ac06": "Source 1: Turing machines\n\nSource 2: . Turing machines are not intended as a practical computing technology, but rather as a thought experiment representing a computing machine\u2014anything from an advanced supercomputer to a mathematician\n\nSource 3: Many types of Turing machines are used to define complexity classes, such as deterministic Turing machines, probabilistic Turing machines, non-deterministic Turing machines, quantum Turing machines,",
    "5ad545545b96ef001a10ac07": "Source 1: Turing machines\n\nSource 2: . Since Turing machines are easy to analyze mathematically, and are believed to be as powerful as any other model of computation, the Turing machine is the most commonly used model in complexity\n\nSource 3: Many types of Turing machines are used to define complexity classes, such as deterministic Turing machines, probabilistic Turing machines, non-deterministic Turing machines, quantum Turing machines,",
    "5ad545545b96ef001a10ac08": "Source 1: . They are all equally powerful in principle, but when resources (such as time or space) are bounded, some of these may be more powerful than others.\n\nSource 2: . However, even though such machines allow for an increase in force, there is a corresponding increase in the length of string that must be displaced in order to move the load\n\nSource 3: . What all these models have in common is that the machines operate deterministically.",
    "5ad545545b96ef001a10ac09": "Source 1: . They are all equally powerful in principle, but when resources (such as time or space) are bounded, some of these may be more powerful than others.\n\nSource 2: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 3: time, can arise even when the overall total is enough",
    "5ad546c75b96ef001a10ac0e": "Source 1: A deterministic Turing machine is the most basic Turing machine, which uses a fixed set of rules to determine its future actions\n\nSource 2: . More precisely, it tries to classify problems that can or cannot be solved with appropriately restricted resources\n\nSource 3: . For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once",
    "5ad546c75b96ef001a10ac0f": "Source 1: . A probabilistic Turing machine is a deterministic Turing machine with an extra supply of random bits\n\nSource 2: . A non-deterministic Turing machine is a deterministic Turing machine with an added feature of non-determinism, which allows a Turing machine to have multiple possible future actions from a given\n\nSource 3: A deterministic Turing machine is the most basic Turing machine, which uses a fixed set of rules to determine its future actions",
    "5ad546c75b96ef001a10ac10": "Source 1: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used\n\nSource 2: efficient algorithm solving a given problem\n\nSource 3: to solve a problem, whereas the latter asks a more general question about all possible algorithms that could be used to solve the same problem",
    "5ad546c75b96ef001a10ac11": "Source 1: . A non-deterministic Turing machine is a deterministic Turing machine with an added feature of non-determinism, which allows a Turing machine to have multiple possible future actions from a given\n\nSource 2: . For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once\n\nSource 3: Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines",
    "5ad546c75b96ef001a10ac12": "Source 1: . One way to view non-determinism is that the Turing machine branches into many possible computational paths at each step, and if it solves the problem in any of these branches, it is said to have\n\nSource 2: . For examples, see non-deterministic algorithm.\n\nSource 3: to analyze, so that non-deterministic time is a very important resource in analyzing computational problems",
    "5ad547945b96ef001a10ac18": "Source 1: Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines\n\nSource 2: A Turing machine is a mathematical model of a general computing machine. It is a theoretical device that manipulates symbols contained on a strip of tape\n\nSource 3: Turing machines",
    "5ad547945b96ef001a10ac19": "Source 1: . Perhaps surprisingly, each of these models can be converted to another without providing any extra computational power. The time and memory consumption of these alternate models may vary\n\nSource 2: But bounding the computation time above by some concrete function f(n) often yields complexity classes that depend on the chosen machine model\n\nSource 3: . What all these models have in common is that the machines operate deterministically.",
    "5ad547945b96ef001a10ac1a": "Source 1: However, some computational problems are easier to analyze in terms of more unusual resources\n\nSource 2: . Perhaps surprisingly, each of these models can be converted to another without providing any extra computational power. The time and memory consumption of these alternate models may vary\n\nSource 3: resources it requires to operate",
    "5ad547945b96ef001a10ac1b": "Source 1: . What all these models have in common is that the machines operate deterministically.\n\nSource 2: . Perhaps surprisingly, each of these models can be converted to another without providing any extra computational power. The time and memory consumption of these alternate models may vary\n\nSource 3: . Clearly, this model is not meant to be a physically realizable model, it is just a theoretically interesting abstract machine that gives rise to particularly interesting complexity classes",
    "5ad5489b5b96ef001a10ac2a": "Source 1: However, some computational problems are easier to analyze in terms of more unusual resources\n\nSource 2: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used\n\nSource 3: to analyze, so that non-deterministic time is a very important resource in analyzing computational problems",
    "5ad5489b5b96ef001a10ac2b": "Source 1: . For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once\n\nSource 2: . The non-deterministic Turing machine has very little to do with how we physically want to compute algorithms, but its branching exactly captures many of the mathematical models we want to analyze,\n\nSource 3: . One way to view non-determinism is that the Turing machine branches into many possible computational paths at each step, and if it solves the problem in any of these branches, it is said to have",
    "5ad5489b5b96ef001a10ac2c": "Source 1: . The non-deterministic Turing machine has very little to do with how we physically want to compute algorithms, but its branching exactly captures many of the mathematical models we want to analyze,\n\nSource 2: Closely related fields in theoretical computer science are analysis of algorithms and computability theory\n\nSource 3: To measure the difficulty of solving a computational problem, one may wish to see how much time the best algorithm requires to solve the problem",
    "5ad5489b5b96ef001a10ac2d": "Source 1: . The non-deterministic Turing machine has very little to do with how we physically want to compute algorithms, but its branching exactly captures many of the mathematical models we want to analyze,\n\nSource 2: . For example, a non-deterministic Turing machine is a computational model that is allowed to branch out to check many different possibilities at once\n\nSource 3: . Clearly, this model is not meant to be a physically realizable model, it is just a theoretically interesting abstract machine that gives rise to particularly interesting complexity classes",
    "5ad5489b5b96ef001a10ac2e": "Source 1: to analyze, so that non-deterministic time is a very important resource in analyzing computational problems\n\nSource 2: Earlier papers studying problems solvable by Turing machines with specific bounded resources include  John Myhill's definition of linear bounded automata (Myhill 1960), Raymond Smullyan's study of\n\nSource 3: . A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a",
    "5ad54a375b96ef001a10ac48": "Source 1: For a precise definition of what it means to solve a problem using a given amount of time and space, a computational model such as the deterministic Turing machine is used\n\nSource 2: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance\n\nSource 3: Problems that can be solved in theory (e.g., given large but finite time), but which in practice take too long for their solutions to be useful, are known as intractable problems",
    "5ad54a375b96ef001a10ac49": "Source 1: . A Turing machine M is said to operate within time f(n), if the time required by M on each input of length n is at most f(n)\n\nSource 2: Turing machines\n\nSource 3: A Turing machine is a mathematical model of a general computing machine. It is a theoretical device that manipulates symbols contained on a strip of tape",
    "5ad54a375b96ef001a10ac4a": "Source 1: For a precise definition of what it means to solve a problem using a given amount of time and space, a computational model such as the deterministic Turing machine is used\n\nSource 2: . For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).\n\nSource 3: . A decision problem A can be solved in time f(n) if there exists a Turing machine operating in time f(n) that solves the problem",
    "5ad54a375b96ef001a10ac4b": "Source 1: For a precise definition of what it means to solve a problem using a given amount of time and space, a computational model such as the deterministic Turing machine is used\n\nSource 2: Earlier papers studying problems solvable by Turing machines with specific bounded resources include  John Myhill's definition of linear bounded automata (Myhill 1960), Raymond Smullyan's study of\n\nSource 3: . Since Turing machines are easy to analyze mathematically, and are believed to be as powerful as any other model of computation, the Turing machine is the most commonly used model in complexity",
    "5ad54a375b96ef001a10ac4c": "Source 1: . A decision problem A can be solved in time f(n) if there exists a Turing machine operating in time f(n) that solves the problem\n\nSource 2: . For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).\n\nSource 3: . However, this is not really the case, since function problems can be recast as decision problems",
    "5ad54b035b96ef001a10ac52": "Source 1: 2 in space applications, such as in some modern space suits, or in early spacecraft such as Apollo, causes no damage due to the low total pressures used. In the case of spacesuits, the O\n\nSource 2: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 3: . Steel pipes and storage vessels used to store and transmit both gaseous and liquid oxygen will act as a fuel; and therefore the design and manufacture of O",
    "5ad54b035b96ef001a10ac53": "Source 1: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 2: However, some computational problems are easier to analyze in terms of more unusual resources\n\nSource 3: To classify the computation time (or similar resources, such as space consumption), one is interested in proving upper and lower bounds on the minimum amount of time required by the most efficient",
    "5ad54b035b96ef001a10ac54": "Source 1: . Complexity measures are very generally defined by the Blum complexity axioms\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: . Somewhat earlier, Boris Trakhtenbrot (1956), a pioneer in the field from the USSR, studied another specific complexity measure. As he remembers:",
    "5ad54b035b96ef001a10ac55": "Source 1: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 2: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 3: . Somewhat earlier, Boris Trakhtenbrot (1956), a pioneer in the field from the USSR, studied another specific complexity measure. As he remembers:",
    "5ad54b035b96ef001a10ac56": "Source 1: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 2: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 3: . Complexity measures are very generally defined by the Blum complexity axioms",
    "5ad54c2f5b96ef001a10ac5c": "Source 1: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: . Since some inputs of size n may be faster to solve than others, we define the following complexities:",
    "5ad54c2f5b96ef001a10ac5d": "Source 1: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 2: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 3: by Juris Hartmanis and Richard Stearns (1965), which laid out the definitions of time and space complexity and proved the hierarchy theorems",
    "5ad54c2f5b96ef001a10ac5e": "Source 1: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 2: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of\n\nSource 3: . Somewhat earlier, Boris Trakhtenbrot (1956), a pioneer in the field from the USSR, studied another specific complexity measure. As he remembers:",
    "5ad54c2f5b96ef001a10ac5f": "Source 1: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 2: . Since some inputs of size n may be faster to solve than others, we define the following complexities:\n\nSource 3: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance",
    "5ad54d625b96ef001a10ac64": "Source 1: For example, consider the deterministic sorting algorithm quicksort. This solves the problem of sorting a list of integers that is given as the input\n\nSource 2: . If we assume that all possible permutations of the input list are equally likely, the average time taken for sorting is O(n log n)\n\nSource 3: . The worst-case is when the input is sorted or sorted in reverse order, and the algorithm takes time O(n2) for this case",
    "5ad54d625b96ef001a10ac65": "Source 1: For example, consider the deterministic sorting algorithm quicksort. This solves the problem of sorting a list of integers that is given as the input\n\nSource 2: . Deterministic algorithms provide a way to tell for sure whether a given number is prime or not\n\nSource 3: . For example, trial division is a deterministic algorithm because, if performed correctly, it will always identify a prime number as prime and a composite number as composite",
    "5ad54d625b96ef001a10ac66": "Source 1: . Since some inputs of size n may be faster to solve than others, we define the following complexities:\n\nSource 2: . The worst-case is when the input is sorted or sorted in reverse order, and the algorithm takes time O(n2) for this case\n\nSource 3: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size",
    "5ad54d625b96ef001a10ac67": "Source 1: . Since the time taken on different inputs of the same size can be different, the worst-case time complexity T(n) is defined to be the maximum time taken over all inputs of size n\n\nSource 2: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 3: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms",
    "5ad54d625b96ef001a10ac68": "Source 1: . The best case occurs when each pivoting divides the list in half, also needing O(n log n) time.\n\nSource 2: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 3: . If we assume that all possible permutations of the input list are equally likely, the average time taken for sorting is O(n log n)",
    "5ad54e7c5b96ef001a10ac76": "Source 1: To classify the computation time (or similar resources, such as space consumption), one is interested in proving upper and lower bounds on the minimum amount of time required by the most efficient\n\nSource 2: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 3: . The theory formalizes this intuition, by introducing mathematical models of computation to study these problems and quantifying the amount of resources needed to solve them, such as time and storage",
    "5ad54e7c5b96ef001a10ac77": "Source 1: The best, worst and average case complexity refer to three different ways of measuring the time complexity (or any other complexity measure) of different inputs of the same size\n\nSource 2: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms\n\nSource 3: . This is usually taken to be the size of the input in bits. Complexity theory is interested in how algorithms scale with an increase in the input size",
    "5ad54e7c5b96ef001a10ac78": "Source 1: Closely related fields in theoretical computer science are analysis of algorithms and computability theory\n\nSource 2: . The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms\n\nSource 3: . A key distinction between analysis of algorithms and computational complexity theory is that the former is devoted to analyzing the amount of resources needed by a particular algorithm to solve a",
    "5ad54e7c5b96ef001a10ac79": "Source 1: . To show an upper bound T(n) on the time complexity of a problem, one needs to show only that there is a particular algorithm with running time at most T(n)\n\nSource 2: . To show a lower bound of T(n) for a problem requires showing that no algorithm can have time complexity lower than T(n).\n\nSource 3: . Nevertheless, a polynomial time algorithm is not always practical. If its running time is, say, n15, it is unreasonable to consider it efficient and it is still useless except on small instances.",
    "5ad54e7c5b96ef001a10ac7a": "Source 1: . However, proving lower bounds is much more difficult, since lower bounds make a statement about all possible algorithms that solve a given problem\n\nSource 2: . To show a lower bound of T(n) for a problem requires showing that no algorithm can have time complexity lower than T(n).\n\nSource 3: Upper and lower bounds are usually stated using the big O notation, which hides constant factors and smaller terms",
    "5ad54f775b96ef001a10ac88": "Source 1: Upper and lower bounds are usually stated using the big O notation, which hides constant factors and smaller terms\n\nSource 2: . This makes the bounds independent of the specific details of the computational model used. For instance, if T(n) = 7n2 + 15n + 40, in big O notation one would write T(n) = O(n2).\n\nSource 3: . This is usually taken to be the size of the input in bits. Complexity theory is interested in how algorithms scale with an increase in the input size",
    "5ad54f775b96ef001a10ac89": "Source 1: Upper and lower bounds are usually stated using the big O notation, which hides constant factors and smaller terms\n\nSource 2: their prime factors\n\nSource 3: . For example, the number 15 can be factored as 3 \u00b7 5 and 1 \u00b7 3 \u00b7 5; if 1 were admitted as a prime, these two presentations would be considered different factorizations of 15 into prime numbers, so",
    "5ad54f775b96ef001a10ac8a": "Source 1: But bounding the computation time above by some concrete function f(n) often yields complexity classes that depend on the chosen machine model\n\nSource 2: . This makes the bounds independent of the specific details of the computational model used. For instance, if T(n) = 7n2 + 15n + 40, in big O notation one would write T(n) = O(n2).\n\nSource 3: . The non-deterministic Turing machine has very little to do with how we physically want to compute algorithms, but its branching exactly captures many of the mathematical models we want to analyze,",
    "5ad54f775b96ef001a10ac8b": "Source 1: . This makes the bounds independent of the specific details of the computational model used. For instance, if T(n) = 7n2 + 15n + 40, in big O notation one would write T(n) = O(n2).\n\nSource 2: Upper and lower bounds are usually stated using the big O notation, which hides constant factors and smaller terms\n\nSource 3: If the input size is n, the time taken can be expressed as a function of n",
    "5ad5501f5b96ef001a10ac90": "Source 1: Of course, some complexity classes have complicated definitions that do not fit into this framework. Thus, a typical complexity class has a definition like the following:\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: . Thus there are pairs of complexity classes such that one is properly included in the other",
    "5ad5501f5b96ef001a10ac91": "Source 1: Of course, some complexity classes have complicated definitions that do not fit into this framework. Thus, a typical complexity class has a definition like the following:\n\nSource 2: LeGrande writes that \"the formulation of a single all-encompassing definition of the term is extremely difficult, if not impossible\n\nSource 3: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria",
    "5ad5501f5b96ef001a10ac92": "Source 1: . Again, there are many complexity classes between the two, such as NL and NC, and it is not known if they are distinct or equal classes.\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: . Thus there are pairs of complexity classes such that one is properly included in the other",
    "5ad5501f5b96ef001a10ac93": "Source 1: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 2: Of course, some complexity classes have complicated definitions that do not fit into this framework. Thus, a typical complexity class has a definition like the following:\n\nSource 3: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems",
    "5ad55ee35b96ef001a10ace4": "Source 1: But bounding the computation time above by some concrete function f(n) often yields complexity classes that depend on the chosen machine model\n\nSource 2: . Clearly, this model is not meant to be a physically realizable model, it is just a theoretically interesting abstract machine that gives rise to particularly interesting complexity classes\n\nSource 3: The complexity class P is often seen as a mathematical abstraction modeling those computational tasks that admit an efficient algorithm. This hypothesis is called the Cobham\u2013Edmonds thesis",
    "5ad55ee35b96ef001a10ace5": "Source 1: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 2: But bounding the computation time above by some concrete function f(n) often yields complexity classes that depend on the chosen machine model\n\nSource 3: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems",
    "5ad55ee35b96ef001a10ace6": "Source 1: . For instance, the language {xx | x is any binary string} can be solved in linear time on a multi-tape Turing machine, but necessarily requires quadratic time in the model of single-tape Turing\n\nSource 2: Many machine models different from the standard multi-tape Turing machines have been proposed in the literature, for example random access machines\n\nSource 3: . A decision problem A can be solved in time f(n) if there exists a Turing machine operating in time f(n) that solves the problem",
    "5ad55ee35b96ef001a10ace7": "Source 1: are encoded as binary strings\n\nSource 2: .e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded\n\nSource 3: When considering computational problems, a problem instance is a string over an alphabet. Usually, the alphabet is taken to be the binary alphabet (i.e",
    "5ad55ee35b96ef001a10ace8": "Source 1: . If we allow polynomial variations in running time, Cobham-Edmonds thesis states that \"the time complexities in any two reasonable and general models of computation are polynomially related\"\n\nSource 2: . In fact, the Cobham\u2013Edmonds thesis states that only those problems that can be solved in polynomial time can be feasibly computed on some computational device\n\nSource 3: . Cobham's thesis says that a problem can be solved with a feasible amount of resources if it admits a polynomial time algorithm.",
    "5ad55fe75b96ef001a10ad0c": "Source 1: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 2: Analogous definitions can be made for space requirements. Although time and space are the most well-known complexity resources, any complexity measure can be viewed as a computational resource\n\nSource 3: To classify the computation time (or similar resources, such as space consumption), one is interested in proving upper and lower bounds on the minimum amount of time required by the most efficient",
    "5ad55fe75b96ef001a10ad0d": "Source 1: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 2: . Other complexity measures used in complexity theory include communication complexity, circuit complexity, and decision tree complexity.\n\nSource 3: . Other complexity measures are also used, such as the amount of communication (used in communication complexity), the number of gates in a circuit (used in circuit complexity) and the number of",
    "5ad55fe75b96ef001a10ad0e": "Source 1: To measure the difficulty of solving a computational problem, one may wish to see how much time the best algorithm requires to solve the problem\n\nSource 2: mechanical application of mathematical steps, such as an algorithm\n\nSource 3: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance",
    "5ad55fe75b96ef001a10ad0f": "Source 1: . Some remote sensing scientists have proposed using the measurement of the radiance coming from vegetation canopies in those bands to characterize plant health status from a satellite platform\n\nSource 2: . The measurement is technically difficult owing to the low signal-to-noise ratio and the physical structure of vegetation; but it has been proposed as a possible method of monitoring the carbon cycle\n\nSource 3: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:",
    "5ad560b85b96ef001a10ad1e": "Source 1: Other important complexity classes include BPP, ZPP and RP, which are defined using probabilistic Turing machines; AC and NC, which are defined using Boolean circuits; and BQP and QMA, which are\n\nSource 2: . Thus there are pairs of complexity classes such that one is properly included in the other\n\nSource 3: ., it is possible that all these complexity classes collapse to one class. Proving that any of these classes are unequal would be a major breakthrough in complexity theory.",
    "5ad560b85b96ef001a10ad1f": "Source 1: Other important complexity classes include BPP, ZPP and RP, which are defined using probabilistic Turing machines; AC and NC, which are defined using Boolean circuits; and BQP and QMA, which are\n\nSource 2: . If P is not equal to NP, then P is not equal to PSPACE either. Since there are many known complexity classes between P and PSPACE, such as RP, BPP, PP, BQP, MA, PH, etc\n\nSource 3: . What all these models have in common is that the machines operate deterministically.",
    "5ad560b85b96ef001a10ad20": "Source 1: Other important complexity classes include BPP, ZPP and RP, which are defined using probabilistic Turing machines; AC and NC, which are defined using Boolean circuits; and BQP and QMA, which are\n\nSource 2: which are defined using quantum Turing machines\n\nSource 3: . Clearly, this model is not meant to be a physically realizable model, it is just a theoretically interesting abstract machine that gives rise to particularly interesting complexity classes",
    "5ad560b85b96ef001a10ad21": "Source 1: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: ., it is possible that all these complexity classes collapse to one class. Proving that any of these classes are unequal would be a major breakthrough in complexity theory.",
    "5ad560b85b96ef001a10ad22": "Source 1: . #P is an important complexity class of counting problems (not decision problems). Classes like IP and AM are defined using Interactive proof systems. ALL is the class of all decision problems.\n\nSource 2: . A typical configuration is to run IP over ATM or a version of MPLS. <Uyless Black, X\n\nSource 3: .25 and well as Frame Relay have been supplanted by the Internet Protocol (IP) at the network layer, and the Asynchronous Transfer Mode (ATM) and or versions of Multi-Protocol Label Switching (MPLS)",
    "5ad561c85b96ef001a10ad3c": "Source 1: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems\n\nSource 2: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:\n\nSource 3: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria",
    "5ad561c85b96ef001a10ad3d": "Source 1: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 2: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems\n\nSource 3: . Having deduced such proper set inclusions, we can proceed to make quantitative statements about how much more additional time or space is needed in order to increase the number of problems that can",
    "5ad561c85b96ef001a10ad3e": "Source 1: . In particular, although DTIME(n) is contained in DTIME(n2), it would be interesting to know if the inclusion is strict\n\nSource 2: . For instance, the set of problems solvable within time f(n) on a deterministic Turing machine is then denoted by DTIME(f(n)).\n\nSource 3: If the input size is n, the time taken can be expressed as a function of n",
    "5ad561c85b96ef001a10ad3f": "Source 1: . They are called hierarchy theorems because they induce a proper hierarchy on the classes defined by constraining the respective resources\n\nSource 2: and relating those classes to each other\n\nSource 3: . More precisely, it tries to classify problems that can or cannot be solved with appropriately restricted resources",
    "5ad561c85b96ef001a10ad40": "Source 1: . Having deduced such proper set inclusions, we can proceed to make quantitative statements about how much more additional time or space is needed in order to increase the number of problems that can\n\nSource 2: For the complexity classes defined in this way, it is desirable to prove that relaxing the requirements on (say) computation time indeed defines a bigger set of problems\n\nSource 3: . Thus the time required to solve a problem (or the space required, or any measure of complexity) is calculated as a function of the size of the instance",
    "5ad562525b96ef001a10ad50": "Source 1: The time and space hierarchy theorems form the basis for most separation results of complexity classes\n\nSource 2: . Unfortunately, this fact doesn't say much about where the problem lies with respect to non-quantum complexity classes.\n\nSource 3: ., it is possible that all these complexity classes collapse to one class. Proving that any of these classes are unequal would be a major breakthrough in complexity theory.",
    "5ad562525b96ef001a10ad51": "Source 1: The time and space hierarchy theorems form the basis for most separation results of complexity classes\n\nSource 2: . For time and space requirements, the answer to such questions is given by the time and space hierarchy theorems respectively\n\nSource 3: by Juris Hartmanis and Richard Stearns (1965), which laid out the definitions of time and space complexity and proved the hierarchy theorems",
    "5ad562525b96ef001a10ad52": "Source 1: . For instance, the time hierarchy theorem tells us that P is strictly contained in EXPTIME, and the space hierarchy theorem tells us that L is strictly contained in PSPACE.\n\nSource 2: . In particular, although DTIME(n) is contained in DTIME(n2), it would be interesting to know if the inclusion is strict\n\nSource 3: Similarly, it is not known if L (the set of all problems that can be solved in logarithmic space) is strictly contained in P or equal to P",
    "5ad562525b96ef001a10ad53": "Source 1: . For instance, the time hierarchy theorem tells us that P is strictly contained in EXPTIME, and the space hierarchy theorem tells us that L is strictly contained in PSPACE.\n\nSource 2: . If P is not equal to NP, then P is not equal to PSPACE either. Since there are many known complexity classes between P and PSPACE, such as RP, BPP, PP, BQP, MA, PH, etc\n\nSource 3: Similarly, it is not known if L (the set of all problems that can be solved in logarithmic space) is strictly contained in P or equal to P",
    "5ad5632f5b96ef001a10ad6c": "Source 1: Of course, some complexity classes have complicated definitions that do not fit into this framework. Thus, a typical complexity class has a definition like the following:\n\nSource 2: . Again, there are many complexity classes between the two, such as NL and NC, and it is not known if they are distinct or equal classes.\n\nSource 3: Many important complexity classes can be defined by bounding the time or space used by the algorithm. Some important complexity classes of decision problems defined in this manner are the following:",
    "5ad5632f5b96ef001a10ad6d": "Source 1: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem\n\nSource 2: The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time\n\nSource 3: reductions remain an unsolved problem",
    "5ad5632f5b96ef001a10ad6e": "Source 1: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem\n\nSource 2: . In 1972, Richard Karp took this idea a leap forward with his landmark paper, \"Reducibility Among Combinatorial Problems\", in which he showed that 21 diverse combinatorial and graph theoretical\n\nSource 3: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria",
    "5ad5632f5b96ef001a10ad6f": "Source 1: . It captures the informal notion of a problem being at least as difficult as another problem\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: A problem is regarded as inherently difficult if its solution requires significant resources, whatever the algorithm used",
    "5ad5632f5b96ef001a10ad70": "Source 1: . There are many different types of reductions, based on the method of reduction, such as Cook reductions, Karp reductions and Levin reductions, and the bound on the complexity of reductions, such as\n\nSource 2: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem\n\nSource 3: reductions remain an unsolved problem",
    "5ad5648b5b96ef001a10ad94": "Source 1: The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time\n\nSource 2: reductions remain an unsolved problem\n\nSource 3: . There are many different types of reductions, based on the method of reduction, such as Cook reductions, Karp reductions and Levin reductions, and the bound on the complexity of reductions, such as",
    "5ad5648b5b96ef001a10ad95": "Source 1: such as polynomial-time reductions or log-space reductions\n\nSource 2: The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time\n\nSource 3: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem",
    "5ad5648b5b96ef001a10ad96": "Source 1: . For example, the problem of squaring an integer can be reduced to the problem of multiplying two integers. This means an algorithm for multiplying two integers can be used to square an integer\n\nSource 2: The integer factorization problem is the computational problem of determining the prime factorization of a given integer\n\nSource 3: The most basic method of checking the primality of a given integer n is called trial division",
    "5ad5648b5b96ef001a10ad97": "Source 1: . For example, the problem of squaring an integer can be reduced to the problem of multiplying two integers. This means an algorithm for multiplying two integers can be used to square an integer\n\nSource 2: . Indeed, this can be done by giving the same input to both inputs of the multiplication algorithm\n\nSource 3: . Thus we see that squaring is not more difficult than multiplication, since squaring can be reduced to multiplication.",
    "5ad5648b5b96ef001a10ad98": "Source 1: . Thus we see that squaring is not more difficult than multiplication, since squaring can be reduced to multiplication.\n\nSource 2: .e., more efficient) to perform the multiplication of two (large) numbers x and y than to calculate x and y (assumed coprime) if only the product xy is known\n\nSource 3: . Indeed, this can be done by giving the same input to both inputs of the multiplication algorithm",
    "5ad565575b96ef001a10adb2": "Source 1: . For this reason, complexity theory addresses computational problems and not particular problem instances.\n\nSource 2: . Since complexity theory is interested in classifying problems based on their difficulty, one defines sets of problems based on some criteria\n\nSource 3: . Unfortunately, this fact doesn't say much about where the problem lies with respect to non-quantum complexity classes.",
    "5ad565575b96ef001a10adb3": "Source 1: . Thus no problem in C is harder than X, since an algorithm for X allows us to solve any problem in C. Of course, the notion of hard problems depends on the type of reduction being used\n\nSource 2: . For instance, if a problem X can be solved using an algorithm for Y, X is no more difficult than Y, and we say that X reduces to Y\n\nSource 3: Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem",
    "5ad565575b96ef001a10adb4": "Source 1: . (Since many problems could be equally hard, one might say that X is one of the hardest problems in C\n\nSource 2: If a problem X is in C and hard for C, then X is said to be complete for C. This means that X is the hardest problem in C\n\nSource 3: . Thus no problem in C is harder than X, since an algorithm for X allows us to solve any problem in C. Of course, the notion of hard problems depends on the type of reduction being used",
    "5ad565575b96ef001a10adb5": "Source 1: . The corresponding set of function problems is FP.\n\nSource 2: . For example, the decision problem in Presburger arithmetic has been shown not to be in P, yet algorithms have been written that solve the problem in reasonable times in most cases\n\nSource 3: This motivates the concept of a problem being hard for a complexity class. A problem X is hard for a class of problems C if every problem in C can be reduced to X",
    "5ad566375b96ef001a10adce": "Source 1: If a problem X is in C and hard for C, then X is said to be complete for C. This means that X is the hardest problem in C\n\nSource 2: . (Since many problems could be equally hard, one might say that X is one of the hardest problems in C\n\nSource 3: . Thus no problem in C is harder than X, since an algorithm for X allows us to solve any problem in C. Of course, the notion of hard problems depends on the type of reduction being used",
    "5ad566375b96ef001a10adcf": "Source 1: . (Since many problems could be equally hard, one might say that X is one of the hardest problems in C\n\nSource 2: If a problem X is in C and hard for C, then X is said to be complete for C. This means that X is the hardest problem in C\n\nSource 3: . Thus no problem in C is harder than X, since an algorithm for X allows us to solve any problem in C. Of course, the notion of hard problems depends on the type of reduction being used",
    "5ad566375b96ef001a10add0": "Source 1: .) Thus the class of NP-complete problems contains the most difficult problems in NP, in the sense that they are the ones most likely not to be in P\n\nSource 2: . The complexity class NP, on the other hand, contains many problems that people would like to solve efficiently, but for which no efficient algorithm is known, such as the Boolean satisfiability\n\nSource 3: . They are some of the very few NP problems not known to be in P or to be NP-complete.",
    "5ad566375b96ef001a10add1": "Source 1: . This is because a polynomial-time solution to \u03a01 would yield a polynomial-time solution to \u03a02\n\nSource 2: . Because the problem P = NP is not solved, being able to reduce a known NP-complete problem, \u03a02, to another problem, \u03a01, would indicate that there is no known polynomial-time solution for \u03a01\n\nSource 3: . The integer factorization problem is in NP and in co-NP (and even in UP and co-UP). If the problem is NP-complete, the polynomial time hierarchy will collapse to its first level (i.e"
}
